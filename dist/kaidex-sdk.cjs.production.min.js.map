{"version":3,"file":"kaidex-sdk.cjs.production.min.js","sources":["../src/types/enums.ts","../node_modules/regenerator-runtime/runtime.js","../src/constants/index.ts","../src/entities/abstract-smc-service.ts","../src/entities/fraction.ts","../src/types/input-params.ts","../src/services/router.ts","../src/constants/methodNames.ts","../src/services/factory.ts","../src/services/krc20.ts","../src/utils/index.ts","../src/entities/kaidex-service.ts","../src/entities/kaidex-client.ts"],"sourcesContent":["export enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP,\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import ROUTER from './abi/router.json';\nimport FACTORY from './abi/factory.json';\nimport KRC20 from './abi/krc20.json';\nimport LIMIT_ORDER from './abi/limit-order.json';\n\nexport const abiJson = {\n  ROUTER,\n  FACTORY,\n  KRC20,\n  LIMIT_ORDER,\n};\n\nexport const smcAddresses = {\n  ROUTER: '0xD15afC6d61eD34d968176397a89fE5Cbd824D493',\n  FACTORY: '0x053Fdaff144a44731f2D9B3847947a9f1c1487Cc',\n  LIMIT_ORDER: '0x3E88CE7E64Bb2763CB8e40CF0d6eb9669f391A6b',\n  WKAI: '0xbedD01A19B321C01279167709DfF6c7419Eb8AC7',\n};\nexport const endpoint = 'https://dev-1.kardiachain.io';\nexport * from './methodNames';\n","import KardiaClient, {\n  KAIChain,\n  KardiaAccount,\n  KardiaTransaction,\n  KRC20,\n} from 'kardia-js-sdk';\n\nimport KardiaContract from 'kardia-js-sdk/dist/smc';\n\nexport abstract class AbstractSmcService {\n  readonly abi: any;\n  readonly smcAddress: string;\n  readonly kardiaClient: KardiaClient;\n  readonly kardiaAccount: KardiaAccount;\n  readonly kardiaContract: KardiaContract;\n  readonly kardiaTransaction: KardiaTransaction;\n  readonly kardiaChain: KAIChain;\n  readonly kardiaKrc20: KRC20;\n\n  constructor({\n    abi,\n    smcAddress,\n    client,\n  }: {\n    abi: any;\n    smcAddress: string;\n    client: KardiaClient;\n  }) {\n    this.abi = abi;\n    this.smcAddress = smcAddress;\n    this.kardiaClient = client;\n    this.kardiaAccount = client.account;\n    this.kardiaContract = client.contract;\n    this.kardiaTransaction = client.transaction;\n    this.kardiaChain = client.kaiChain;\n    this.kardiaKrc20 = client.krc20;\n  }\n\n  smcCallData = async ({\n    abi,\n    contractAddr,\n    methodName,\n    params,\n  }: {\n    abi: any;\n    contractAddr: string;\n    methodName: string;\n    params: any[];\n  }) => {\n    this.kardiaContract.updateAbi(abi);\n    const invoke = await this.kardiaContract.invokeContract(methodName, params);\n    return await invoke.call(contractAddr, {}, 'latest');\n  };\n}\n","import JSBI from 'jsbi';\nimport _Decimal from 'decimal.js-light';\nimport _Big from 'big.js';\nimport toFormat from 'toformat';\nimport { Rounding } from '../types/enums';\nimport { BigintIsh } from '../types/bigint';\n\nconst ONE = JSBI.BigInt(1);\n\nconst Decimal = toFormat(_Decimal);\nconst Big = toFormat(_Big);\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: 0,\n  [Rounding.ROUND_HALF_UP]: 1,\n  [Rounding.ROUND_UP]: 2,\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: 0,\n  [Rounding.ROUND_HALF_UP]: 1,\n  [Rounding.ROUND_UP]: 2,\n};\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI ? bigintIsh : JSBI.BigInt(Number(bigintIsh));\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI;\n  public readonly denominator: JSBI;\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator);\n    this.denominator = parseBigintIsh(denominator);\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator);\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(\n      JSBI.remainder(this.numerator, this.denominator),\n      this.denominator\n    );\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(\n        JSBI.add(this.numerator, otherParsed.numerator),\n        this.denominator\n      );\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(\n        JSBI.subtract(this.numerator, otherParsed.numerator),\n        this.denominator\n      );\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    );\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding],\n    });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number = 0,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toFormat(decimalPlaces, format);\n  }\n}\n","import { LiquidityPair, Token } from './index';\n\nexport enum TradeType {\n  BUY = 0,\n  SELL = 1,\n}\n\nexport enum InputType {\n  EXACT_IN = 0,\n  EXACT_OUT = 1,\n}\n\nexport declare namespace InputParams {\n  interface CalculateOutputAmount {\n    amount: number | string;\n    inputToken: Token;\n    outputToken: Token;\n    inputType: InputType;\n  }\n\n  interface CalculatePriceImpact {\n    inputToken: Token;\n    outputToken: Token;\n    amountIn: string;\n    amountOut: string;\n  }\n\n  interface AddLiquidity {\n    inputAmount: string | number;\n    outputAmount: string | number;\n    tokenA: Token;\n    tokenB: Token;\n    walletAddress: string;\n    slippageTolerance: string | number;\n    txDeadline: number;\n  }\n\n  interface RemoveLiquidity {\n    pair: LiquidityPair;\n    withdrawAmount: string;\n    walletAddress: string;\n    slippageTolerance: string | number;\n    txDeadline: number;\n  }\n\n  interface MarketSwap {\n    amountIn: string;\n    amountOut: string;\n    inputToken: Token;\n    outputToken: Token;\n    addressTo: string;\n    inputType: InputType;\n    txDeadline: number;\n    slippageTolerance: string | number;\n  }\n\n  interface LimitOrder {\n    amountIn: string;\n    amountOut: string;\n    inputToken: Token;\n    outputToken: Token;\n    tradeType: TradeType;\n    inputType: InputType;\n  }\n\n  interface CancelOrder {\n    pairAddr: string;\n    orderID: number;\n  }\n}\n","import { methodNames } from '../constants';\nimport JSBI from 'jsbi';\nimport { AbstractSmcService } from '../entities';\nimport { KardiaAccount } from 'kardia-js-sdk';\nimport { PooledTokens } from '../types';\n\nconst validatePath = (path: string[]): void => {\n  if (\n    !path ||\n    !path.length ||\n    !path[0] ||\n    !KardiaAccount.isAddress(path[0]) ||\n    !path[1] ||\n    !KardiaAccount.isAddress(path[1])\n  )\n    throw new Error('Invalid token address!');\n};\n\nexport class RouterService extends AbstractSmcService {\n  getReserves = async (\n    tokenA: string,\n    tokenB: string\n  ): Promise<PooledTokens> => {\n    if (!KardiaAccount.isAddress(tokenA) || !KardiaAccount.isAddress(tokenB))\n      throw new Error('Invalid token!');\n\n    return this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_RESERVES,\n      params: [tokenA, tokenB],\n    });\n  };\n\n  getAmountsOut = async (amountIn: string, path: string[]): Promise<string> => {\n    if (!amountIn) throw new Error('Invalid input amount!');\n    validatePath(path);\n    const result = await this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_AMOUNTS_OUT,\n      params: [amountIn, path],\n    });\n    return result && result.length > 0 ? JSBI.BigInt(result[1]).toString() : '';\n  };\n\n  getAmountsIn = async (amountOut: string, path: string[]): Promise<string> => {\n    if (!amountOut) throw new Error('Invalid input amount!');\n    validatePath(path);\n    const result = await this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_AMOUNTS_IN,\n      params: [amountOut, path],\n    });\n    return result && result.length > 0 ? JSBI.BigInt(result[0]).toString() : '';\n  };\n}\n","export const methodNames = {\n  //Factory\n  GET_PAIR: 'getPair',\n\n  //Router\n  GET_RESERVES: 'getReserves',\n  GET_AMOUNTS_OUT: 'getAmountsOut',\n  GET_AMOUNTS_IN: 'getAmountsIn',\n  GET_TOTAL_KAI_AMOUNTS_IN: 'getTotalKAIAmountsIn',\n  ADD_LIQUIDITY: 'addLiquidity',\n  ADD_LIQUIDITY_KAI: 'addLiquidityKAI',\n  REMOVE_LIQUIDITY: 'removeLiquidity',\n  REMOVE_LIQUIDITY_KAI: 'removeLiquidityKAI',\n  SWAP_EXACT_TOKENS_FOR_TOKENS: 'swapExactTokensForTokens',\n  SWAP_TOKENS_FOR_EXACT_TOKENS: 'swapTokensForExactTokens',\n  SWAP_EXACT_KAI_FOR_TOKENS: 'swapExactKAIForTokens',\n  SWAP_EXACT_TOKENS_FOR_KAI: 'swapExactTokensForKAI',\n  SWAP_TOKENS_FOR_EXACT_KAI: 'swapTokensForExactKAI',\n  SWAP_KAI_FOR_EXACT_TOKENS: 'swapKAIForExactTokens',\n\n  //KRC20\n  APPROVE: 'approve',\n  ALLOWANCE: 'allowance',\n  BALANCE_OF: 'balanceOf',\n  TOTAL_SUPPLY: 'totalSupply',\n\n  //Limit order\n  ORDER_INPUT_KAI: 'orderInputKAI',\n  ORDER_INPUT_TOKENS: 'orderInputTokens',\n  CANCEL_ORDER: 'cancelOrder',\n};\n","import { methodNames } from '../constants';\nimport { AbstractSmcService } from '../entities';\n\nexport class FactoryService extends AbstractSmcService {\n  getPair = (tokenA: string, tokenB: string): Promise<string> => {\n    if (!tokenA.trim() || !tokenB.trim()) throw new Error('Invalid token!');\n\n    return this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_PAIR,\n      params: [tokenA, tokenB],\n    });\n  };\n}\n","import JSBI from 'jsbi';\nimport { methodNames } from '../constants';\nimport { AbstractSmcService } from '../entities';\nimport { KardiaAccount } from 'kardia-js-sdk';\n\nexport class KRC20Service extends AbstractSmcService {\n  getAllowance = async (\n    tokenAddress: string,\n    walletAddress: string,\n    spenderAddress: string\n  ): Promise<JSBI> => {\n    if (!KardiaAccount.isAddress(tokenAddress))\n      throw new Error('Invalid token Address');\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n\n    const amount = await this.smcCallData({\n      abi: this.abi,\n      contractAddr: tokenAddress,\n      methodName: methodNames.ALLOWANCE,\n      params: [walletAddress, spenderAddress],\n    });\n    return JSBI.BigInt(amount);\n  };\n\n  balanceOf = (tokenAddress: string, walletAddress: string) => {\n    if (!KardiaAccount.isAddress(tokenAddress))\n      throw new Error('Invalid token Address');\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n\n    return this.smcCallData({\n      abi: this.abi,\n      methodName: methodNames.BALANCE_OF,\n      contractAddr: tokenAddress,\n      params: [walletAddress],\n    });\n  };\n\n  getTotalSupply(tokenAddress: string) {\n    if (!KardiaAccount.isAddress(tokenAddress))\n      throw new Error('Invalid token Address');\n\n    return this.smcCallData({\n      abi: this.abi,\n      contractAddr: tokenAddress,\n      methodName: methodNames.TOTAL_SUPPLY,\n      params: [],\n    });\n  }\n}\n","import JSBI from 'jsbi';\nimport { Fraction } from '../entities/fraction';\nimport { BigNumber } from 'bignumber.js';\nexport const ONE = JSBI.BigInt(1);\nexport const TEN = JSBI.BigInt(10);\nconst ONE_FRACTION = new Fraction(1);\n\nconst cellValue = (kaiValue: any, decimals: number = 18): string => {\n  const rawValue = new BigNumber(kaiValue);\n  return rawValue.multipliedBy(new BigNumber(10 ** decimals)).toFixed(0, 1);\n};\n\nconst convertValueFollowDecimal = (\n  value: Fraction | string,\n  decimals: number\n): string => {\n  try {\n    const valueFrac = typeof value === 'string' ? new Fraction(value) : value;\n    if (valueFrac.equalTo(0)) {\n      return '0';\n    }\n\n    if (decimals === undefined || decimals === null) {\n      return valueFrac.toFixed();\n    }\n\n    const DecimalsbigNum = JSBI.BigInt(decimals);\n    const parseB = JSBI.exponentiate(TEN, DecimalsbigNum).toString();\n    return removeTrailingZeros(valueFrac.divide(parseB).toFixed(decimals));\n  } catch (error) {\n    console.error('Error converting value from decimal:', error);\n    return '0';\n  }\n};\n\nconst removeTrailingZeros = (value: any): string => {\n  const regEx1 = /^[0]+/;\n  const regEx2 = /[0]+$/;\n  const regEx3 = /[.]$/;\n\n  const valueInString = value.toString();\n\n  let after = valueInString.replace(regEx1, ''); // Remove leading 0's\n\n  if (after.indexOf('.') > -1) {\n    after = after.replace(regEx2, ''); // Remove trailing 0's\n  }\n  after = after.replace(regEx3, ''); // Remove trailing decimal\n\n  if (after.indexOf('.') === 0) {\n    after = '0' + after;\n  }\n  return after ? after : '0';\n};\n\nconst calculateSlippageValue = (\n  value: string,\n  slippageTolerance: string | number,\n  type: 'add' | 'sub'\n): string => {\n  try {\n    const _value = new Fraction(value);\n    const slippageFrac = new Fraction(\n      cellValue(slippageTolerance),\n      cellValue(100)\n    );\n    let slippagePercent: Fraction;\n    if (type === 'sub') {\n      if (Number(slippageTolerance) > 100) {\n        return '0';\n      }\n      slippagePercent = ONE_FRACTION.subtract(slippageFrac);\n    } else {\n      slippagePercent = ONE_FRACTION.add(slippageFrac);\n    }\n    return _value.multiply(slippagePercent).toFixed();\n  } catch (error) {\n    console.error('Error calculating slippage value:', error);\n    return '';\n  }\n};\n\nconst calculateLiquidityProvidersFee = (amountIn: string | number): string => {\n  const amountFrac = new Fraction(amountIn);\n\n  return amountFrac\n    .multiply(3)\n    .divide(1000)\n    .toFixed();\n};\n\nconst renderPair = (tokenIn: string, tokenOut: string): string[] => {\n  if (!tokenIn || !tokenOut)\n    throw new Error('Error render pair: token not found!');\n  return [tokenIn, tokenOut];\n};\n\nexport const Utils = {\n  cellValue,\n  convertValueFollowDecimal,\n  calculateSlippageValue,\n  calculateLiquidityProvidersFee,\n  renderPair,\n};\n","import KardiaClient from 'kardia-js-sdk';\nimport {\n  abiJson,\n  endpoint as defaultEndpoint,\n  smcAddresses as defaultAddresses,\n} from '../constants';\nimport { FactoryService, RouterService, KRC20Service } from '../services';\nimport {\n  ABIS,\n  KaidexOptions,\n  SmcAddresses,\n  SMCParams,\n  InputParams,\n} from '../types';\nimport { KardiaAccount } from 'kardia-js-sdk';\nimport { Utils } from '../utils';\nimport { Fraction } from './fraction';\n\nexport abstract class KaidexService {\n  protected abiJSON: Required<ABIS>;\n  protected smcAddresses: Required<SmcAddresses>;\n  protected kardiaClient: KardiaClient;\n\n  public factory: FactoryService;\n  public router: RouterService;\n  public krc20: KRC20Service;\n\n  constructor(\n    options: KaidexOptions = {\n      abis: {},\n      smcAddresses: {},\n      rpcEndpoint: '',\n    }\n  ) {\n    const { abis, rpcEndpoint, smcAddresses } = options;\n\n    this.abiJSON = {\n      router: (abis && abis.router) || abiJson.ROUTER,\n      factory: (abis && abis.factory) || abiJson.FACTORY,\n      krc20: (abis && abis.krc20) || abiJson.KRC20,\n      limitOrder: (abis && abis.limitOrder) || abiJson.LIMIT_ORDER,\n    };\n\n    this.smcAddresses = {\n      router: (smcAddresses && smcAddresses.router) || defaultAddresses.ROUTER,\n      factory:\n        (smcAddresses && smcAddresses.factory) || defaultAddresses.FACTORY,\n      limitOrder:\n        (smcAddresses && smcAddresses.limitOrder) ||\n        defaultAddresses.LIMIT_ORDER,\n      wkai: (smcAddresses && smcAddresses.wkai) || defaultAddresses.WKAI,\n    };\n\n    this.kardiaClient = new KardiaClient({\n      endpoint: rpcEndpoint || defaultEndpoint,\n    });\n\n    this.factory = new FactoryService({\n      abi: this.abiJSON.factory,\n      smcAddress: this.smcAddresses.factory,\n      client: this.kardiaClient,\n    });\n\n    this.router = new RouterService({\n      abi: this.abiJSON.router,\n      smcAddress: this.smcAddresses.router,\n      client: this.kardiaClient,\n    });\n\n    this.krc20 = new KRC20Service({\n      abi: this.abiJSON.krc20,\n      client: this.kardiaClient,\n      smcAddress: '',\n    });\n  }\n\n  public get abis() {\n    return this.abiJSON;\n  }\n\n  public get addresses() {\n    return this.smcAddresses;\n  }\n\n  public isKAI = (tokenAddress: string) =>\n    !!(\n      tokenAddress &&\n      this.smcAddresses.wkai &&\n      tokenAddress.toLowerCase() === this.smcAddresses.wkai.toLowerCase()\n    );\n\n  protected transformAddLiquidityParams = (\n    params: InputParams.AddLiquidity\n  ): SMCParams.AddLiquidity => {\n    const {\n      slippageTolerance,\n      txDeadline,\n      inputAmount,\n      outputAmount,\n      tokenA,\n      tokenB,\n      walletAddress,\n    } = params;\n\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n    if (\n      !KardiaAccount.isAddress(tokenA.tokenAddress) ||\n      !KardiaAccount.isAddress(tokenB.tokenAddress)\n    )\n      throw new Error('Invalid token address');\n\n    const amountADesiredInDec = inputAmount\n      ? Utils.cellValue(inputAmount, tokenA.decimals)\n      : '0';\n    const amountBDesiredInDec = outputAmount\n      ? Utils.cellValue(outputAmount, tokenB.decimals)\n      : '0';\n    const calculatedAmountAMinInDec = inputAmount\n      ? Utils.calculateSlippageValue(\n          amountADesiredInDec,\n          slippageTolerance,\n          'sub'\n        )\n      : '0';\n    const calculatedAmountBMinInDec = outputAmount\n      ? Utils.calculateSlippageValue(\n          amountBDesiredInDec,\n          slippageTolerance,\n          'sub'\n        )\n      : '0';\n\n    if (\n      !amountADesiredInDec ||\n      !calculatedAmountAMinInDec ||\n      !amountBDesiredInDec ||\n      !calculatedAmountBMinInDec\n    )\n      throw new Error('Invalid token amount');\n    if (!txDeadline) throw new Error('Invalid deadline');\n\n    return {\n      tokenA: tokenA.tokenAddress,\n      tokenB: tokenB.tokenAddress,\n      amountADesired: amountADesiredInDec,\n      amountBDesired: amountBDesiredInDec,\n      amountAMin: calculatedAmountAMinInDec,\n      amountBMin: calculatedAmountBMinInDec,\n      walletAddress,\n      deadlineInMilliseconds: txDeadline,\n    };\n  };\n\n  protected transformAddLiquidityKAIParams = (\n    params: InputParams.AddLiquidity\n  ): SMCParams.AddLiquidityKAI => {\n    const {\n      amountADesired,\n      amountBDesired,\n      amountAMin,\n      amountBMin,\n      tokenA,\n      tokenB,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = this.transformAddLiquidityParams(params);\n\n    const otherTokenAddress = this.isKAI(tokenA) ? tokenB : tokenA;\n    const otherTokenDesiredAmount = this.isKAI(tokenA)\n      ? amountBDesired\n      : amountADesired;\n    const otherTokenMinAmount = this.isKAI(tokenA) ? amountBMin : amountAMin;\n    const amountKAI = this.isKAI(tokenA) ? amountADesired : amountBDesired;\n    const amountKAIMin = this.isKAI(tokenA) ? amountAMin : amountBMin;\n\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n    if (!KardiaAccount.isAddress(tokenA) || !KardiaAccount.isAddress(tokenB))\n      throw new Error('Invalid token address');\n    if (!amountADesired || !amountAMin || !amountBDesired || !amountBMin)\n      throw new Error('Invalid token amount');\n    if (!deadlineInMilliseconds) throw new Error('Invalid deadline');\n\n    return {\n      tokenAddress: otherTokenAddress,\n      amountTokenMin: otherTokenMinAmount,\n      amountTokenDesired: otherTokenDesiredAmount,\n      amountKAI: amountKAI,\n      amountKAIMin: amountKAIMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    };\n  };\n\n  protected transformRemoveLiquidityParams = async (\n    params: InputParams.RemoveLiquidity\n  ): Promise<SMCParams.RemoveLiquidity> => {\n    const {\n      pair,\n      withdrawAmount,\n      walletAddress,\n      slippageTolerance,\n      txDeadline,\n    } = params;\n    const { tokenA, tokenB, pairAddress } = pair;\n\n    const balance = await this.krc20.balanceOf(pairAddress, walletAddress);\n\n    if (!Number(withdrawAmount)) throw new Error('Invalid amount!');\n    if (!walletAddress) throw new Error('Invalid wallet!');\n    if (!Number(balance) || Number(withdrawAmount) > Number(balance))\n      throw new Error('Not enough balance!');\n\n    const totalSupply = await this.krc20.getTotalSupply(pairAddress);\n\n    const withdrawPercent = new Fraction(withdrawAmount)\n      .divide(balance)\n      .multiply(100);\n\n    const tokenABalance = await this.krc20.balanceOf(\n      tokenA.tokenAddress,\n      pairAddress\n    );\n\n    //amountAMin = (balance / totalSupply) * tokenABalance * withdrawPercent / 100\n    const amountAMin = new Fraction(balance)\n      .divide(totalSupply)\n      .multiply(tokenABalance)\n      .multiply(withdrawPercent)\n      .divide(100)\n      .toFixed();\n\n    const _amountAMin = Utils.calculateSlippageValue(\n      amountAMin,\n      slippageTolerance,\n      'sub'\n    );\n    const tokenBBalance = await this.krc20.balanceOf(\n      tokenB.tokenAddress,\n      pairAddress\n    );\n\n    //amountBMin = (balance / totalSupply) * tokenBBalance * withdrawPercent / 100\n    const amountBMin = new Fraction(balance)\n      .divide(totalSupply)\n      .multiply(tokenBBalance)\n      .multiply(withdrawPercent)\n      .divide(100)\n      .toFixed();\n\n    const _amountBMin = Utils.calculateSlippageValue(\n      amountBMin,\n      slippageTolerance,\n      'sub'\n    );\n\n    return {\n      tokenA: tokenA.tokenAddress,\n      tokenB: tokenB.tokenAddress,\n      liquidity: withdrawAmount,\n      amountAMin: _amountAMin,\n      amountBMin: _amountBMin,\n      walletAddress,\n      deadlineInMilliseconds: txDeadline,\n    };\n  };\n\n  protected transformRemoveLiquidityKAIParams = async (\n    params: InputParams.RemoveLiquidity\n  ): Promise<SMCParams.RemoveLiquidityKAI> => {\n    const {\n      tokenA,\n      tokenB,\n      liquidity,\n      amountAMin,\n      amountBMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = await this.transformRemoveLiquidityParams(params);\n\n    const otherToken = this.isKAI(tokenA) ? tokenB : tokenA;\n    const amountKAIMin = this.isKAI(tokenA) ? amountAMin : amountBMin;\n    const amountTokenMin = this.isKAI(tokenA) ? amountBMin : amountAMin;\n\n    return {\n      tokenAddress: otherToken,\n      liquidity: liquidity,\n      amountKAIMin: amountKAIMin,\n      amountTokenMin: amountTokenMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    };\n  };\n\n  public invokeSMC = async ({\n    abi,\n    smcAddr,\n    methodName,\n    params,\n    amount = 0,\n    gasLimit = 5000000,\n    gasPrice = 1,\n  }: SMCParams.InvokeParams) => {\n    const abiJson =\n      typeof abi === 'string'\n        ? JSON.parse(abi)\n        : JSON.parse(JSON.stringify(abi));\n    this.kardiaClient.contract.updateAbi(abiJson);\n    const data = await this.kardiaClient.contract\n      .invokeContract(methodName, params)\n      .txData();\n    return this.kardiaClient.transaction.sendTransactionToExtension(\n      {\n        gas: gasLimit,\n        gasPrice: gasPrice,\n        value: amount,\n        to: smcAddr,\n        data: data,\n      },\n      true\n    );\n  };\n}\n","import { KaidexService } from './kaidex-service';\nimport JSBI from 'jsbi';\nimport { methodNames } from '../constants';\nimport { Utils } from '../utils';\nimport { Fraction } from './fraction';\nimport { SMCParams, Token, InputParams, InputType } from '../types';\n\nexport class KaidexClient extends KaidexService {\n  getPair = (tokenA: string, tokenB: string): Promise<string> =>\n    this.factory.getPair(tokenA, tokenB);\n\n  getReverses = (tokenA: string, tokenB: string) =>\n    this.router.getReserves(tokenA, tokenB);\n\n  getApprovalState = async ({\n    tokenAddr,\n    decimals,\n    walletAddress,\n    spenderAddress,\n    amountToCheck,\n  }: {\n    tokenAddr: string;\n    decimals: number;\n    walletAddress: string;\n    spenderAddress: string;\n    amountToCheck: number | string;\n  }): Promise<boolean> => {\n    if (this.isKAI(tokenAddr)) return true;\n    const currentAllowance = await this.krc20.getAllowance(\n      tokenAddr,\n      walletAddress,\n      spenderAddress\n    );\n\n    return !JSBI.lessThan(\n      currentAllowance,\n      JSBI.BigInt(Utils.cellValue(amountToCheck, decimals))\n    );\n  };\n\n  getTokenBalance = (\n    tokenAddress: string,\n    walletAddress: string\n  ): Promise<string> => {\n    return this.krc20.balanceOf(tokenAddress, walletAddress);\n  };\n\n  addLiquidityCallParameters = (\n    params: InputParams.AddLiquidity\n  ): SMCParams.CallParams => {\n    const { tokenA: inputToken, tokenB: outputToken } = params;\n    // For KAI Pairs\n    if (\n      this.isKAI(inputToken.tokenAddress) ||\n      this.isKAI(outputToken.tokenAddress)\n    ) {\n      const {\n        tokenAddress,\n        amountTokenMin,\n        amountTokenDesired,\n        amountKAI,\n        amountKAIMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      } = this.transformAddLiquidityKAIParams(params);\n\n      return {\n        methodName: methodNames.ADD_LIQUIDITY_KAI,\n        args: [\n          tokenAddress,\n          amountTokenDesired,\n          amountTokenMin,\n          amountKAIMin,\n          walletAddress,\n          deadlineInMilliseconds,\n        ],\n        amount: amountKAI,\n      };\n    }\n\n    const {\n      tokenA,\n      tokenB,\n      amountADesired,\n      amountBDesired,\n      amountAMin,\n      amountBMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = this.transformAddLiquidityParams(params);\n\n    return {\n      methodName: methodNames.ADD_LIQUIDITY,\n      args: [\n        tokenA,\n        tokenB,\n        amountADesired,\n        amountBDesired,\n        amountAMin,\n        amountBMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      ],\n    };\n  };\n\n  removeLiquidityCallParameters = async (\n    params: InputParams.RemoveLiquidity\n  ): Promise<SMCParams.CallParams> => {\n    const { tokenA: inputToken, tokenB: outputToken } = params.pair;\n    // For KAI Pairs\n    if (\n      this.isKAI(inputToken.tokenAddress) ||\n      this.isKAI(outputToken.tokenAddress)\n    ) {\n      const {\n        tokenAddress,\n        liquidity,\n        amountKAIMin,\n        amountTokenMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      } = await this.transformRemoveLiquidityKAIParams(params);\n\n      return {\n        methodName: methodNames.REMOVE_LIQUIDITY_KAI,\n        args: [\n          tokenAddress,\n          liquidity,\n          amountTokenMin,\n          amountKAIMin,\n          walletAddress,\n          deadlineInMilliseconds,\n        ],\n      };\n    }\n\n    const {\n      tokenA,\n      tokenB,\n      liquidity,\n      amountAMin,\n      amountBMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = await this.transformRemoveLiquidityParams(params);\n\n    return {\n      methodName: methodNames.REMOVE_LIQUIDITY,\n      args: [\n        tokenA,\n        tokenB,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      ],\n    };\n  };\n\n  calculateOutputAmount = async ({\n    amount,\n    inputToken,\n    outputToken,\n    inputType,\n  }: InputParams.CalculateOutputAmount): Promise<string> => {\n    if (!amount || !inputToken || !outputToken)\n      throw new Error('Params input error.');\n    const {\n      tokenAddress: inputTokenAddr,\n      decimals: inputTokenDec,\n    } = inputToken;\n    const {\n      tokenAddress: outputTokenAddr,\n      decimals: outputTokenDec,\n    } = outputToken;\n\n    let amountDec;\n    const path = Utils.renderPair(inputTokenAddr, outputTokenAddr);\n    let amountOutDec = '';\n    let decimals;\n\n    switch (inputType) {\n      case InputType.EXACT_IN:\n        amountDec = Utils.cellValue(amount, inputTokenDec);\n        amountOutDec = await this.router.getAmountsOut(amountDec, path);\n        decimals = outputTokenDec;\n        break;\n      case InputType.EXACT_OUT:\n        amountDec = Utils.cellValue(amount, outputTokenDec);\n        amountOutDec = await this.router.getAmountsIn(amountDec, path);\n        decimals = inputTokenDec;\n        break;\n    }\n    return Utils.convertValueFollowDecimal(amountOutDec, decimals);\n  };\n\n  calculatePriceImpact = async ({\n    inputToken,\n    outputToken,\n    amountIn,\n    amountOut,\n  }: InputParams.CalculatePriceImpact): Promise<string> => {\n    if (!inputToken || !outputToken || !amountIn || !amountOut)\n      throw new Error('Params input error.');\n    const {\n      decimals: inputTokenDec,\n      tokenAddress: inputTokenAddr,\n    } = inputToken;\n    const {\n      decimals: outputTokenDec,\n      tokenAddress: outputTokenAddr,\n    } = outputToken;\n\n    const { reserveA, reserveB } = await this.router.getReserves(\n      inputTokenAddr,\n      outputTokenAddr\n    );\n    if (!reserveA || reserveA === '0' || !reserveB || reserveB === '0')\n      return '0';\n\n    const amountInDec = Utils.cellValue(amountIn, inputTokenDec);\n    const amountOutDec = Utils.cellValue(amountOut, outputTokenDec);\n\n    const reserveAConvertBigInt = inputTokenDec\n      ? new Fraction(\n          JSBI.BigInt(reserveA),\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(inputTokenDec))\n        )\n      : new Fraction(JSBI.BigInt(reserveA));\n    const reserveBConvertBigInt = outputTokenDec\n      ? new Fraction(\n          JSBI.BigInt(reserveB),\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(outputTokenDec))\n        )\n      : new Fraction(JSBI.BigInt(reserveB));\n    const midPrice = reserveBConvertBigInt.divide(reserveAConvertBigInt);\n\n    const amountInFrac = new Fraction(\n      amountInDec,\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(inputTokenDec))\n    );\n    const amountOutFrac = new Fraction(\n      amountOutDec,\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(outputTokenDec))\n    );\n\n    const exactQuote = midPrice.multiply(amountInFrac);\n    const slippage = exactQuote.subtract(amountOutFrac).divide(exactQuote);\n    return slippage.multiply(100).toFixed(5);\n  };\n\n  calculateExchangeRate = async (\n    tokenA: Token,\n    tokenB: Token\n  ): Promise<{ rateAB: number; rateBA: number }> => {\n    const { reserveA, reserveB } = await this.router.getReserves(\n      tokenA.tokenAddress,\n      tokenB.tokenAddress\n    );\n    const tokenAValue = Utils.convertValueFollowDecimal(\n      JSBI.BigInt(reserveA).toString(),\n      tokenA.decimals\n    );\n    const tokenBValue = Utils.convertValueFollowDecimal(\n      JSBI.BigInt(reserveB).toString(),\n      tokenB.decimals\n    );\n    const _tokenAValue = Number(tokenAValue);\n    const _tokenBValue = Number(tokenBValue);\n    const rateAB = _tokenAValue ? _tokenBValue / _tokenAValue : 0;\n    const rateBA = _tokenBValue ? _tokenAValue / _tokenBValue : 0;\n    return { rateAB, rateBA };\n  };\n\n  public marketSwapCallParameters = ({\n    amountIn,\n    amountOut,\n    inputToken,\n    outputToken,\n    addressTo,\n    inputType,\n    txDeadline,\n    slippageTolerance,\n  }: InputParams.MarketSwap): SMCParams.CallParams => {\n    if (!amountIn || !amountOut || !addressTo || !inputToken || !outputToken)\n      throw new Error('Params input error.');\n    const kaiIn = this.isKAI(inputToken.tokenAddress);\n    const kaiOut = this.isKAI(outputToken.tokenAddress);\n    const amountInDec = Utils.cellValue(amountIn, inputToken.decimals);\n    const amountOutDec = Utils.cellValue(amountOut, outputToken.decimals);\n    const amountOutMinDec = Utils.calculateSlippageValue(\n      amountOutDec,\n      slippageTolerance,\n      'sub'\n    );\n    const amountInMaxDec = Utils.calculateSlippageValue(\n      amountInDec,\n      slippageTolerance,\n      'add'\n    );\n    const path = Utils.renderPair(\n      inputToken.tokenAddress,\n      outputToken.tokenAddress\n    );\n\n    let swapParams: SMCParams.CallParams = {} as SMCParams.CallParams;\n    switch (inputType) {\n      case InputType.EXACT_IN:\n        if (kaiIn) {\n          swapParams = {\n            methodName: methodNames.SWAP_EXACT_KAI_FOR_TOKENS,\n            args: [amountOutMinDec, path, addressTo, txDeadline],\n            amount: amountInDec,\n          } as SMCParams.CallParams;\n        } else if (kaiOut) {\n          swapParams = {\n            methodName: methodNames.SWAP_EXACT_TOKENS_FOR_KAI,\n            args: [amountInDec, amountOutMinDec, path, addressTo, txDeadline],\n          };\n        } else {\n          swapParams = {\n            methodName: methodNames.SWAP_EXACT_TOKENS_FOR_TOKENS,\n            args: [amountInDec, amountOutMinDec, path, addressTo, txDeadline],\n          };\n        }\n        break;\n      case InputType.EXACT_OUT:\n        if (kaiIn) {\n          swapParams = {\n            methodName: methodNames.SWAP_KAI_FOR_EXACT_TOKENS,\n            args: [amountOutDec, path, addressTo, txDeadline],\n            amount: amountInMaxDec,\n          };\n        } else if (kaiOut) {\n          swapParams = {\n            methodName: methodNames.SWAP_TOKENS_FOR_EXACT_KAI,\n            args: [amountOutDec, amountInMaxDec, path, addressTo, txDeadline],\n          };\n        } else {\n          swapParams = {\n            methodName: methodNames.SWAP_TOKENS_FOR_EXACT_TOKENS,\n            args: [amountOutDec, amountInMaxDec, path, addressTo, txDeadline],\n          };\n        }\n        break;\n    }\n    return swapParams;\n  };\n\n  public limitOrderCallParameters = ({\n    amountIn,\n    amountOut,\n    inputToken,\n    outputToken,\n    inputType,\n    tradeType,\n  }: InputParams.LimitOrder): SMCParams.CallParams => {\n    if (!amountIn || !amountOut || !inputToken || !outputToken)\n      throw new Error('Params input error.');\n    const {\n      tokenAddress: inputTokenAddr,\n      decimals: inputTokenDec,\n    } = inputToken;\n    const {\n      tokenAddress: outputTokenAddr,\n      decimals: outputTokenDec,\n    } = outputToken;\n    const amountInDec = Utils.cellValue(amountIn, inputTokenDec);\n    const amountOutDec = Utils.cellValue(amountOut, outputTokenDec);\n    const kaiIn = this.isKAI(inputToken.tokenAddress);\n    let swapParams: SMCParams.CallParams;\n    if (kaiIn) {\n      swapParams = {\n        methodName: methodNames.ORDER_INPUT_KAI,\n        args: [outputTokenAddr, amountOutDec, inputType, tradeType],\n        amount: amountInDec,\n      };\n    } else {\n      swapParams = {\n        methodName: methodNames.ORDER_INPUT_TOKENS,\n        args: [\n          inputTokenAddr,\n          amountInDec,\n          outputTokenAddr,\n          amountOutDec,\n          inputType,\n          tradeType,\n        ],\n      };\n    }\n    return swapParams;\n  };\n\n  cancelLimitOrder = ({\n    pairAddr,\n    orderID,\n  }: InputParams.CancelOrder): SMCParams.CallParams => {\n    if (!pairAddr || !orderID) throw new Error('Params input error.');\n    return {\n      methodName: methodNames.CANCEL_ORDER,\n      args: [pairAddr, orderID],\n    } as SMCParams.CallParams;\n  };\n}\n"],"names":["Rounding","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","abiJson","ROUTER","FACTORY","KRC20","LIMIT_ORDER","AbstractSmcService","abi","smcAddress","client","contractAddr","methodName","params","_this","kardiaContract","updateAbi","invokeContract","kardiaClient","kardiaAccount","account","contract","kardiaTransaction","transaction","kardiaChain","kaiChain","kardiaKrc20","krc20","ONE","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","parseBigintIsh","bigintIsh","Number","TradeType","InputType","Fraction","numerator","denominator","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","validatePath","path","KardiaAccount","isAddress","RouterService","tokenA","tokenB","smcCallData","amountIn","amountOut","FactoryService","trim","KRC20Service","tokenAddress","walletAddress","spenderAddress","getTotalSupply","TEN","ONE_FRACTION","cellValue","kaiValue","decimals","BigNumber","multipliedBy","Utils","convertValueFollowDecimal","valueFrac","DecimalsbigNum","parseB","exponentiate","after","replace","indexOf","removeTrailingZeros","console","calculateSlippageValue","slippageTolerance","slippagePercent","_value","slippageFrac","calculateLiquidityProvidersFee","renderPair","tokenIn","tokenOut","KaidexService","options","abis","smcAddresses","rpcEndpoint","wkai","toLowerCase","txDeadline","inputAmount","outputAmount","amountADesiredInDec","amountBDesiredInDec","calculatedAmountAMinInDec","calculatedAmountBMinInDec","amountADesired","amountBDesired","amountAMin","amountBMin","deadlineInMilliseconds","transformAddLiquidityParams","otherTokenAddress","isKAI","otherTokenDesiredAmount","otherTokenMinAmount","amountKAI","amountKAIMin","amountTokenMin","amountTokenDesired","withdrawAmount","pair","pairAddress","balanceOf","balance","totalSupply","withdrawPercent","tokenABalance","_amountAMin","tokenBBalance","_amountBMin","liquidity","transformRemoveLiquidityParams","otherToken","smcAddr","amount","gasLimit","gasPrice","JSON","parse","stringify","txData","sendTransactionToExtension","gas","to","data","abiJSON","router","factory","limitOrder","KardiaClient","endpoint","KaidexClient","getPair","getReserves","amountToCheck","tokenAddr","getAllowance","outputToken","transformAddLiquidityKAIParams","args","transformRemoveLiquidityKAIParams","inputToken","inputType","inputTokenDec","outputTokenDec","amountOutDec","EXACT_IN","EXACT_OUT","amountDec","getAmountsOut","getAmountsIn","inputTokenAddr","outputTokenAddr","reserveB","reserveA","amountInDec","reserveAConvertBigInt","reserveBConvertBigInt","midPrice","amountInFrac","amountOutFrac","exactQuote","slippage","tokenAValue","tokenBValue","_tokenAValue","_tokenBValue","rateAB","rateBA","addressTo","kaiIn","kaiOut","amountOutMinDec","amountInMaxDec","swapParams","tradeType","pairAddr","orderID"],"mappings":"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"}