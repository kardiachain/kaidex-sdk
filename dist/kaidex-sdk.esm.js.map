{"version":3,"file":"kaidex-sdk.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants/methodNames.ts","../src/constants/index.ts","../src/entities/abstract-smc-service.ts","../src/types/enums.ts","../src/entities/fraction.ts","../src/services/router.ts","../src/services/factory.ts","../src/services/krc20.ts","../src/utils/index.ts","../src/entities/kaidex-service.ts","../src/types/input-params.ts","../src/entities/kaidex-client.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const methodNames = {\n  //Factory\n  GET_PAIR: 'getPair',\n\n  //Router\n  GET_RESERVES: 'getReserves',\n  GET_AMOUNTS_OUT: 'getAmountsOut',\n  GET_AMOUNTS_IN: 'getAmountsIn',\n  GET_TOTAL_KAI_AMOUNTS_IN: 'getTotalKAIAmountsIn',\n  ADD_LIQUIDITY: 'addLiquidity',\n  ADD_LIQUIDITY_KAI: 'addLiquidityKAI',\n  REMOVE_LIQUIDITY: 'removeLiquidity',\n  REMOVE_LIQUIDITY_KAI: 'removeLiquidityKAI',\n  SWAP_EXACT_TOKENS_FOR_TOKENS: 'swapExactTokensForTokens',\n  SWAP_TOKENS_FOR_EXACT_TOKENS: 'swapTokensForExactTokens',\n  SWAP_EXACT_KAI_FOR_TOKENS: 'swapExactKAIForTokens',\n  SWAP_EXACT_TOKENS_FOR_KAI: 'swapExactTokensForKAI',\n  SWAP_TOKENS_FOR_EXACT_KAI: 'swapTokensForExactKAI',\n  SWAP_KAI_FOR_EXACT_TOKENS: 'swapKAIForExactTokens',\n\n  //KRC20\n  APPROVE: 'approve',\n  ALLOWANCE: 'allowance',\n  BALANCE_OF: 'balanceOf',\n  TOTAL_SUPPLY: 'totalSupply',\n\n  //Limit order\n  ORDER_INPUT_KAI: 'orderInputKAI',\n  ORDER_INPUT_TOKENS: 'orderInputTokens',\n  CANCEL_ORDER: 'cancelOrder',\n};\n","import ROUTER from './abi/router.json';\nimport FACTORY from './abi/factory.json';\nimport KRC20 from './abi/krc20.json';\nimport LIMIT_ORDER from './abi/limit-order.json';\n\nexport const abiJson = {\n  ROUTER,\n  FACTORY,\n  KRC20,\n  LIMIT_ORDER,\n};\n\nexport const smcAddresses = {\n  ROUTER: '0xD15afC6d61eD34d968176397a89fE5Cbd824D493',\n  FACTORY: '0x053Fdaff144a44731f2D9B3847947a9f1c1487Cc',\n  LIMIT_ORDER: '0x3E88CE7E64Bb2763CB8e40CF0d6eb9669f391A6b',\n  WKAI: '0xbedD01A19B321C01279167709DfF6c7419Eb8AC7',\n};\nexport const endpoint = 'https://dev-1.kardiachain.io';\nexport * from './methodNames';\n","import KardiaClient, {\n  KAIChain,\n  KardiaAccount,\n  KardiaTransaction,\n  KRC20,\n} from 'kardia-js-sdk';\n\nimport KardiaContract from 'kardia-js-sdk/dist/smc';\n\nexport abstract class AbstractSmcService {\n  readonly abi: any;\n  readonly smcAddress: string;\n  readonly kardiaClient: KardiaClient;\n  readonly kardiaAccount: KardiaAccount;\n  readonly kardiaContract: KardiaContract;\n  readonly kardiaTransaction: KardiaTransaction;\n  readonly kardiaChain: KAIChain;\n  readonly kardiaKrc20: KRC20;\n\n  constructor({\n    abi,\n    smcAddress,\n    client,\n  }: {\n    abi: any;\n    smcAddress: string;\n    client: KardiaClient;\n  }) {\n    this.abi = abi;\n    this.smcAddress = smcAddress;\n    this.kardiaClient = client;\n    this.kardiaAccount = client.account;\n    this.kardiaContract = client.contract;\n    this.kardiaTransaction = client.transaction;\n    this.kardiaChain = client.kaiChain;\n    this.kardiaKrc20 = client.krc20;\n  }\n\n  smcCallData = async ({\n    abi,\n    contractAddr,\n    methodName,\n    params,\n  }: {\n    abi: any;\n    contractAddr: string;\n    methodName: string;\n    params: any[];\n  }) => {\n    this.kardiaContract.updateAbi(abi);\n    const invoke = await this.kardiaContract.invokeContract(methodName, params);\n    return await invoke.call(contractAddr, {}, 'latest');\n  };\n}\n","export enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP,\n}\n","import JSBI from 'jsbi';\nimport _Decimal from 'decimal.js-light';\nimport _Big from 'big.js';\nimport toFormat from 'toformat';\nimport { Rounding } from '../types/enums';\nimport { BigintIsh } from '../types/bigint';\n\nconst ONE = JSBI.BigInt(1);\n\nconst Decimal = toFormat(_Decimal);\nconst Big = toFormat(_Big);\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: 0,\n  [Rounding.ROUND_HALF_UP]: 1,\n  [Rounding.ROUND_UP]: 2,\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: 0,\n  [Rounding.ROUND_HALF_UP]: 1,\n  [Rounding.ROUND_UP]: 2,\n};\n\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\n  return bigintIsh instanceof JSBI ? bigintIsh : JSBI.BigInt(Number(bigintIsh));\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI;\n  public readonly denominator: JSBI;\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\n    this.numerator = parseBigintIsh(numerator);\n    this.denominator = parseBigintIsh(denominator);\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator);\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(\n      JSBI.remainder(this.numerator, this.denominator),\n      this.denominator\n    );\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(\n        JSBI.add(this.numerator, otherParsed.numerator),\n        this.denominator\n      );\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(\n        JSBI.subtract(this.numerator, otherParsed.numerator),\n        this.denominator\n      );\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed =\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    );\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding],\n    });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number = 0,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toFormat(decimalPlaces, format);\n  }\n}\n","import { methodNames } from '../constants';\nimport JSBI from 'jsbi';\nimport { AbstractSmcService } from '../entities';\nimport { KardiaAccount } from 'kardia-js-sdk';\nimport { PooledTokens } from '../types';\n\nconst validatePath = (path: string[]): void => {\n  if (\n    !path ||\n    !path.length ||\n    !path[0] ||\n    !KardiaAccount.isAddress(path[0]) ||\n    !path[1] ||\n    !KardiaAccount.isAddress(path[1])\n  )\n    throw new Error('Invalid token address!');\n};\n\nexport class RouterService extends AbstractSmcService {\n  getReserves = async (\n    tokenA: string,\n    tokenB: string\n  ): Promise<PooledTokens> => {\n    if (!KardiaAccount.isAddress(tokenA) || !KardiaAccount.isAddress(tokenB))\n      throw new Error('Invalid token!');\n\n    return this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_RESERVES,\n      params: [tokenA, tokenB],\n    });\n  };\n\n  getAmountsOut = async (amountIn: string, path: string[]): Promise<string> => {\n    if (!amountIn) throw new Error('Invalid input amount!');\n    validatePath(path);\n    const result = await this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_AMOUNTS_OUT,\n      params: [amountIn, path],\n    });\n    return result && result.length > 0 ? JSBI.BigInt(result[1]).toString() : '';\n  };\n\n  getAmountsIn = async (amountOut: string, path: string[]): Promise<string> => {\n    if (!amountOut) throw new Error('Invalid input amount!');\n    validatePath(path);\n    const result = await this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_AMOUNTS_IN,\n      params: [amountOut, path],\n    });\n    return result && result.length > 0 ? JSBI.BigInt(result[0]).toString() : '';\n  };\n}\n","import { methodNames } from '../constants';\nimport { AbstractSmcService } from '../entities';\n\nexport class FactoryService extends AbstractSmcService {\n  getPair = (tokenA: string, tokenB: string): Promise<string> => {\n    if (!tokenA.trim() || !tokenB.trim()) throw new Error('Invalid token!');\n\n    return this.smcCallData({\n      abi: this.abi,\n      contractAddr: this.smcAddress,\n      methodName: methodNames.GET_PAIR,\n      params: [tokenA, tokenB],\n    });\n  };\n}\n","import JSBI from 'jsbi';\nimport { methodNames } from '../constants';\nimport { AbstractSmcService } from '../entities';\nimport { KardiaAccount } from 'kardia-js-sdk';\n\nexport class KRC20Service extends AbstractSmcService {\n  getAllowance = async (\n    tokenAddress: string,\n    walletAddress: string,\n    spenderAddress: string\n  ): Promise<JSBI> => {\n    if (!KardiaAccount.isAddress(tokenAddress))\n      throw new Error('Invalid token Address');\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n\n    const amount = await this.smcCallData({\n      abi: this.abi,\n      contractAddr: tokenAddress,\n      methodName: methodNames.ALLOWANCE,\n      params: [walletAddress, spenderAddress],\n    });\n    return JSBI.BigInt(amount);\n  };\n\n  balanceOf = (tokenAddress: string, walletAddress: string) => {\n    if (!KardiaAccount.isAddress(tokenAddress))\n      throw new Error('Invalid token Address');\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n\n    return this.smcCallData({\n      abi: this.abi,\n      methodName: methodNames.BALANCE_OF,\n      contractAddr: tokenAddress,\n      params: [walletAddress],\n    });\n  };\n\n  getTotalSupply(tokenAddress: string) {\n    if (!KardiaAccount.isAddress(tokenAddress))\n      throw new Error('Invalid token Address');\n\n    return this.smcCallData({\n      abi: this.abi,\n      contractAddr: tokenAddress,\n      methodName: methodNames.TOTAL_SUPPLY,\n      params: [],\n    });\n  }\n}\n","import JSBI from 'jsbi';\nimport { Fraction } from '../entities/fraction';\nexport const ONE = JSBI.BigInt(1);\nexport const TEN = JSBI.BigInt(10);\nconst ONE_FRACTION = new Fraction(1);\n\nconst cellValue = (kaiValue: any, decimals: number = 18): string => {\n  let cellString = removeTrailingZeros(kaiValue);\n  let decimalStr = cellString.split('.')[1];\n  let numberStr = cellString.split('.')[0];\n  if (!decimalStr) {\n    numberStr = numberStr.padEnd(decimals + numberStr.length, '0');\n  } else {\n    decimalStr = decimalStr.padEnd(decimals, '0');\n  }\n  cellString = `${numberStr}${decimalStr || ''}`;\n  return cellString;\n};\n\nconst convertValueFollowDecimal = (\n  value: Fraction | string,\n  decimals: number\n): string => {\n  try {\n    const valueFrac = typeof value === 'string' ? new Fraction(value) : value;\n    if (valueFrac.equalTo(0)) {\n      return '0';\n    }\n\n    if (decimals === undefined || decimals === null) {\n      return valueFrac.toFixed();\n    }\n\n    const DecimalsbigNum = JSBI.BigInt(decimals);\n    const parseB = JSBI.exponentiate(TEN, DecimalsbigNum).toString();\n    return removeTrailingZeros(valueFrac.divide(parseB).toFixed(decimals));\n  } catch (error) {\n    console.error('Error converting value from decimal:', error);\n    return '0';\n  }\n};\n\nconst removeTrailingZeros = (value: any): string => {\n  const regEx1 = /^[0]+/;\n  const regEx2 = /[0]+$/;\n  const regEx3 = /[.]$/;\n\n  const valueInString = value.toString();\n\n  let after = valueInString.replace(regEx1, ''); // Remove leading 0's\n\n  if (after.indexOf('.') > -1) {\n    after = after.replace(regEx2, ''); // Remove trailing 0's\n  }\n  after = after.replace(regEx3, ''); // Remove trailing decimal\n\n  if (after.indexOf('.') === 0) {\n    after = '0' + after;\n  }\n  return after ? after : '0';\n};\n\nconst calculateSlippageValue = (\n  value: string,\n  slippageTolerance: string | number,\n  type: 'add' | 'sub'\n): string => {\n  try {\n    const _value = new Fraction(value);\n    const slippageFrac = new Fraction(\n      cellValue(slippageTolerance),\n      cellValue(100)\n    );\n    let slippagePercent: Fraction;\n    if (type === 'sub') {\n      if (Number(slippageTolerance) > 100) {\n        return '0';\n      }\n      slippagePercent = ONE_FRACTION.subtract(slippageFrac);\n    } else {\n      slippagePercent = ONE_FRACTION.add(slippageFrac);\n    }\n    return _value.multiply(slippagePercent).toFixed();\n  } catch (error) {\n    console.error('Error calculating slippage value:', error);\n    return '';\n  }\n};\n\nconst calculateLiquidityProvidersFee = (amountIn: string | number): string => {\n  const amountFrac = new Fraction(amountIn);\n\n  return amountFrac\n    .multiply(3)\n    .divide(1000)\n    .toFixed();\n};\n\nconst renderPair = (tokenIn: string, tokenOut: string): string[] => {\n  if (!tokenIn || !tokenOut)\n    throw new Error('Error render pair: token not found!');\n  return [tokenIn, tokenOut];\n};\n\nexport const Utils = {\n  cellValue,\n  convertValueFollowDecimal,\n  calculateSlippageValue,\n  calculateLiquidityProvidersFee,\n  renderPair,\n};\n","import KardiaClient from 'kardia-js-sdk';\nimport {\n  abiJson,\n  endpoint as defaultEndpoint,\n  smcAddresses as defaultAddresses,\n} from '../constants';\nimport { FactoryService, RouterService, KRC20Service } from '../services';\nimport {\n  ABIS,\n  KaidexOptions,\n  SmcAddresses,\n  SMCParams,\n  InputParams,\n} from '../types';\nimport { KardiaAccount } from 'kardia-js-sdk';\nimport { Utils } from '../utils';\nimport { Fraction } from './fraction';\n\nexport abstract class KaidexService {\n  protected abiJSON: Required<ABIS>;\n  protected smcAddresses: Required<SmcAddresses>;\n  protected kardiaClient: KardiaClient;\n\n  public factory: FactoryService;\n  public router: RouterService;\n  public krc20: KRC20Service;\n\n  constructor(\n    options: KaidexOptions = {\n      abis: {},\n      smcAddresses: {},\n      rpcEndpoint: '',\n    }\n  ) {\n    const { abis, rpcEndpoint, smcAddresses } = options;\n\n    this.abiJSON = {\n      router: (abis && abis.router) || abiJson.ROUTER,\n      factory: (abis && abis.factory) || abiJson.FACTORY,\n      krc20: (abis && abis.krc20) || abiJson.KRC20,\n      limitOrder: (abis && abis.limitOrder) || abiJson.LIMIT_ORDER,\n    };\n\n    this.smcAddresses = {\n      router: (smcAddresses && smcAddresses.router) || defaultAddresses.ROUTER,\n      factory:\n        (smcAddresses && smcAddresses.factory) || defaultAddresses.FACTORY,\n      limitOrder:\n        (smcAddresses && smcAddresses.limitOrder) ||\n        defaultAddresses.LIMIT_ORDER,\n      wkai: (smcAddresses && smcAddresses.wkai) || defaultAddresses.WKAI,\n    };\n\n    this.kardiaClient = new KardiaClient({\n      endpoint: rpcEndpoint || defaultEndpoint,\n    });\n\n    this.factory = new FactoryService({\n      abi: this.abiJSON.factory,\n      smcAddress: this.smcAddresses.factory,\n      client: this.kardiaClient,\n    });\n\n    this.router = new RouterService({\n      abi: this.abiJSON.router,\n      smcAddress: this.smcAddresses.router,\n      client: this.kardiaClient,\n    });\n\n    this.krc20 = new KRC20Service({\n      abi: this.abiJSON.krc20,\n      client: this.kardiaClient,\n      smcAddress: '',\n    });\n  }\n\n  public get abis() {\n    return this.abiJSON;\n  }\n\n  public get addresses() {\n    return this.smcAddresses;\n  }\n\n  public isKAI = (tokenAddress: string) =>\n    !!(\n      tokenAddress &&\n      this.smcAddresses.wkai &&\n      tokenAddress.toLowerCase() === this.smcAddresses.wkai.toLowerCase()\n    );\n\n  protected transformAddLiquidityParams = (\n    params: InputParams.AddLiquidity\n  ): SMCParams.AddLiquidity => {\n    const {\n      slippageTolerance,\n      txDeadline,\n      inputAmount,\n      outputAmount,\n      tokenA,\n      tokenB,\n      walletAddress,\n    } = params;\n\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n    if (\n      !KardiaAccount.isAddress(tokenA.tokenAddress) ||\n      !KardiaAccount.isAddress(tokenB.tokenAddress)\n    )\n      throw new Error('Invalid token address');\n\n    const amountADesiredInDec = inputAmount\n      ? Utils.cellValue(inputAmount, tokenA.decimals)\n      : '0';\n    const amountBDesiredInDec = outputAmount\n      ? Utils.cellValue(outputAmount, tokenB.decimals)\n      : '0';\n    const calculatedAmountAMinInDec = inputAmount\n      ? Utils.calculateSlippageValue(\n          amountADesiredInDec,\n          slippageTolerance,\n          'sub'\n        )\n      : '0';\n    const calculatedAmountBMinInDec = outputAmount\n      ? Utils.calculateSlippageValue(\n          amountBDesiredInDec,\n          slippageTolerance,\n          'sub'\n        )\n      : '0';\n\n    if (\n      !amountADesiredInDec ||\n      !calculatedAmountAMinInDec ||\n      !amountBDesiredInDec ||\n      !calculatedAmountBMinInDec\n    )\n      throw new Error('Invalid token amount');\n    if (!txDeadline) throw new Error('Invalid deadline');\n\n    return {\n      tokenA: tokenA.tokenAddress,\n      tokenB: tokenB.tokenAddress,\n      amountADesired: amountADesiredInDec,\n      amountBDesired: amountBDesiredInDec,\n      amountAMin: calculatedAmountAMinInDec,\n      amountBMin: calculatedAmountBMinInDec,\n      walletAddress,\n      deadlineInMilliseconds: txDeadline,\n    };\n  };\n\n  protected transformAddLiquidityKAIParams = (\n    params: InputParams.AddLiquidity\n  ): SMCParams.AddLiquidityKAI => {\n    const {\n      amountADesired,\n      amountBDesired,\n      amountAMin,\n      amountBMin,\n      tokenA,\n      tokenB,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = this.transformAddLiquidityParams(params);\n\n    const otherTokenAddress = this.isKAI(tokenA) ? tokenB : tokenA;\n    const otherTokenDesiredAmount = this.isKAI(tokenA)\n      ? amountBDesired\n      : amountADesired;\n    const otherTokenMinAmount = this.isKAI(tokenA) ? amountBMin : amountAMin;\n    const amountKAI = this.isKAI(tokenA) ? amountADesired : amountBDesired;\n    const amountKAIMin = this.isKAI(tokenA) ? amountAMin : amountBMin;\n\n    if (!KardiaAccount.isAddress(walletAddress))\n      throw new Error('Invalid wallet address');\n    if (!KardiaAccount.isAddress(tokenA) || !KardiaAccount.isAddress(tokenB))\n      throw new Error('Invalid token address');\n    if (!amountADesired || !amountAMin || !amountBDesired || !amountBMin)\n      throw new Error('Invalid token amount');\n    if (!deadlineInMilliseconds) throw new Error('Invalid deadline');\n\n    return {\n      tokenAddress: otherTokenAddress,\n      amountTokenMin: otherTokenMinAmount,\n      amountTokenDesired: otherTokenDesiredAmount,\n      amountKAI: amountKAI,\n      amountKAIMin: amountKAIMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    };\n  };\n\n  protected transformRemoveLiquidityParams = async (\n    params: InputParams.RemoveLiquidity\n  ): Promise<SMCParams.RemoveLiquidity> => {\n    const {\n      pair,\n      withdrawPercent,\n      walletAddress,\n      slippageTolerance,\n      txDeadline,\n    } = params;\n    const { tokenA, tokenB, pairAddress } = pair;\n\n    const balance = await this.krc20.balanceOf(pairAddress, walletAddress)\n\n    if (!Number(withdrawPercent)) throw new Error('Invalid amount!');\n    if (!walletAddress) throw new Error('Invalid wallet!');\n    if (!Number(balance)) throw new Error('Not enough balance!');\n\n    const totalSupply = await this.krc20.getTotalSupply(pairAddress);\n\n    //liquidity = balance * withdrawPercent / 100\n    const liquidity = new Fraction(balance)\n      .multiply(withdrawPercent)\n      .divide(100)\n      .toFixed();\n    const tokenABalance = await this.krc20.balanceOf(\n      tokenA.tokenAddress,\n      pairAddress\n    );\n\n    //amountAMin = (balance / totalSupply) * tokenABalance * withdrawPercent / 100\n    const amountAMin = new Fraction(balance)\n      .divide(totalSupply)\n      .multiply(tokenABalance)\n      .multiply(withdrawPercent)\n      .divide(100)\n      .toFixed();\n\n    const _amountAMin = Utils.calculateSlippageValue(\n      amountAMin,\n      slippageTolerance,\n      'sub'\n    );\n    const tokenBBalance = await this.krc20.balanceOf(\n      tokenB.tokenAddress,\n      pairAddress\n    );\n\n    //amountBMin = (balance / totalSupply) * tokenBBalance * withdrawPercent / 100\n    const amountBMin = new Fraction(balance)\n      .divide(totalSupply)\n      .multiply(tokenBBalance)\n      .multiply(withdrawPercent)\n      .divide(100)\n      .toFixed();\n\n    const _amountBMin = Utils.calculateSlippageValue(\n      amountBMin,\n      slippageTolerance,\n      'sub'\n    );\n\n    return {\n      tokenA: tokenA.tokenAddress,\n      tokenB: tokenB.tokenAddress,\n      liquidity: liquidity,\n      amountAMin: _amountAMin,\n      amountBMin: _amountBMin,\n      walletAddress,\n      deadlineInMilliseconds: txDeadline,\n    };\n  };\n\n  protected transformRemoveLiquidityKAIParams = async (\n    params: InputParams.RemoveLiquidity\n  ): Promise<SMCParams.RemoveLiquidityKAI> => {\n    const {\n      tokenA,\n      tokenB,\n      liquidity,\n      amountAMin,\n      amountBMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = await this.transformRemoveLiquidityParams(params);\n\n    const otherToken = this.isKAI(tokenA) ? tokenB : tokenA;\n    const amountKAIMin = this.isKAI(tokenA) ? amountAMin : amountBMin;\n    const amountTokenMin = this.isKAI(tokenA) ? amountBMin : amountAMin;\n\n    return {\n      tokenAddress: otherToken,\n      liquidity: liquidity,\n      amountKAIMin: amountKAIMin,\n      amountTokenMin: amountTokenMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    };\n  };\n\n  public invokeSMC = async ({\n    abi,\n    smcAddr,\n    methodName,\n    params,\n    amount = 0,\n    gasLimit = 5000000,\n    gasPrice = 1,\n  }: SMCParams.InvokeParams) => {\n    const abiJson =\n      typeof abi === 'string'\n        ? JSON.parse(abi)\n        : JSON.parse(JSON.stringify(abi));\n    this.kardiaClient.contract.updateAbi(abiJson);\n    const data = await this.kardiaClient.contract\n      .invokeContract(methodName, params)\n      .txData();\n    return this.kardiaClient.transaction.sendTransactionToExtension(\n      {\n        gas: gasLimit,\n        gasPrice: gasPrice,\n        value: amount,\n        to: smcAddr,\n        data: data,\n      },\n      true\n    );\n  };\n}\n","import { MyLiquidityPair, Token } from './index';\n\nexport enum TradeType {\n  BUY = 0,\n  SELL = 1,\n}\n\nexport enum InputType {\n  EXACT_IN = 0,\n  EXACT_OUT = 1,\n}\n\nexport declare namespace InputParams {\n  interface CalculateOutputAmount {\n    amount: number | string;\n    inputToken: Token;\n    outputToken: Token;\n    inputType: InputType;\n  }\n\n  interface CalculatePriceImpact {\n    inputToken: Token;\n    outputToken: Token;\n    amountIn: string;\n    amountOut: string;\n  }\n\n  interface AddLiquidity {\n    inputAmount: string | number;\n    outputAmount: string | number;\n    tokenA: Token;\n    tokenB: Token;\n    walletAddress: string;\n    slippageTolerance: string | number;\n    txDeadline: number;\n  }\n\n  interface RemoveLiquidity {\n    pair: MyLiquidityPair;\n    withdrawPercent: string | number;\n    walletAddress: string;\n    slippageTolerance: string | number;\n    txDeadline: number;\n  }\n\n  interface MarketSwap {\n    amountIn: string;\n    amountOut: string;\n    inputToken: Token;\n    outputToken: Token;\n    addressTo: string;\n    inputType: InputType;\n    txDeadline: number;\n    slippageTolerance: string | number;\n  }\n\n  interface LimitOrder {\n    amountIn: string;\n    amountOut: string;\n    inputToken: Token;\n    outputToken: Token;\n    tradeType: TradeType;\n    inputType: InputType;\n  }\n\n  interface CancelOrder {\n    pairAddr: string;\n    orderID: number;\n  }\n}\n","import { KaidexService } from './kaidex-service';\nimport JSBI from 'jsbi';\nimport { methodNames } from '../constants';\nimport { Utils } from '../utils';\nimport { Fraction } from './fraction';\nimport { SMCParams, Token, InputParams, InputType } from '../types';\n\nexport class KaidexClient extends KaidexService {\n  getPair = (tokenA: string, tokenB: string): Promise<string> =>\n    this.factory.getPair(tokenA, tokenB);\n\n  getReverses = (tokenA: string, tokenB: string) =>\n    this.router.getReserves(tokenA, tokenB);\n\n  getApprovalState = async ({\n    tokenAddr,\n    decimals,\n    walletAddress,\n    spenderAddress,\n    amountToCheck,\n  }: {\n    tokenAddr: string;\n    decimals: number;\n    walletAddress: string;\n    spenderAddress: string;\n    amountToCheck: number | string;\n  }): Promise<boolean> => {\n    if (this.isKAI(tokenAddr)) return true;\n    const currentAllowance = await this.krc20.getAllowance(\n      tokenAddr,\n      walletAddress,\n      spenderAddress\n    );\n\n    return !JSBI.lessThan(\n      currentAllowance,\n      JSBI.BigInt(Utils.cellValue(amountToCheck, decimals))\n    );\n  };\n\n  getTokenBalance = (\n    tokenAddress: string,\n    walletAddress: string\n  ): Promise<string> => {\n    return this.krc20.balanceOf(tokenAddress, walletAddress);\n  };\n\n  addLiquidityCallParameters = (\n    params: InputParams.AddLiquidity\n  ): SMCParams.CallParams => {\n    const { tokenA: inputToken, tokenB: outputToken } = params;\n    // For KAI Pairs\n    if (\n      this.isKAI(inputToken.tokenAddress) ||\n      this.isKAI(outputToken.tokenAddress)\n    ) {\n      const {\n        tokenAddress,\n        amountTokenMin,\n        amountTokenDesired,\n        amountKAI,\n        amountKAIMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      } = this.transformAddLiquidityKAIParams(params);\n\n      return {\n        methodName: methodNames.ADD_LIQUIDITY_KAI,\n        args: [\n          tokenAddress,\n          amountTokenDesired,\n          amountTokenMin,\n          amountKAIMin,\n          walletAddress,\n          deadlineInMilliseconds,\n        ],\n        amount: amountKAI,\n      };\n    }\n\n    const {\n      tokenA,\n      tokenB,\n      amountADesired,\n      amountBDesired,\n      amountAMin,\n      amountBMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = this.transformAddLiquidityParams(params);\n\n    return {\n      methodName: methodNames.ADD_LIQUIDITY,\n      args: [\n        tokenA,\n        tokenB,\n        amountADesired,\n        amountBDesired,\n        amountAMin,\n        amountBMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      ],\n    };\n  };\n\n  removeLiquidityCallParameters = async (\n    params: InputParams.RemoveLiquidity\n  ): Promise<SMCParams.CallParams> => {\n    const { tokenA: inputToken, tokenB: outputToken } = params.pair;\n    // For KAI Pairs\n    if (\n      this.isKAI(inputToken.tokenAddress) ||\n      this.isKAI(outputToken.tokenAddress)\n    ) {\n      const {\n        tokenAddress,\n        liquidity,\n        amountKAIMin,\n        amountTokenMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      } = await this.transformRemoveLiquidityKAIParams(params);\n\n      return {\n        methodName: methodNames.REMOVE_LIQUIDITY_KAI,\n        args: [\n          tokenAddress,\n          liquidity,\n          amountTokenMin,\n          amountKAIMin,\n          walletAddress,\n          deadlineInMilliseconds,\n        ],\n      };\n    }\n\n    const {\n      tokenA,\n      tokenB,\n      liquidity,\n      amountAMin,\n      amountBMin,\n      walletAddress,\n      deadlineInMilliseconds,\n    } = await this.transformRemoveLiquidityParams(params);\n\n    return {\n      methodName: methodNames.REMOVE_LIQUIDITY,\n      args: [\n        tokenA,\n        tokenB,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        walletAddress,\n        deadlineInMilliseconds,\n      ],\n    };\n  };\n\n  calculateOutputAmount = async ({\n    amount,\n    inputToken,\n    outputToken,\n    inputType,\n  }: InputParams.CalculateOutputAmount): Promise<string> => {\n    if (!amount || !inputToken || !outputToken)\n      throw new Error('Params input error.');\n    const {\n      tokenAddress: inputTokenAddr,\n      decimals: inputTokenDec,\n    } = inputToken;\n    const {\n      tokenAddress: outputTokenAddr,\n      decimals: outputTokenDec,\n    } = outputToken;\n\n    let amountDec;\n    const path = Utils.renderPair(inputTokenAddr, outputTokenAddr);\n    let amountOutDec = '';\n    let decimals;\n\n    switch (inputType) {\n      case InputType.EXACT_IN:\n        amountDec = Utils.cellValue(amount, inputTokenDec);\n        amountOutDec = await this.router.getAmountsOut(amountDec, path);\n        decimals = outputTokenDec;\n        break;\n      case InputType.EXACT_OUT:\n        amountDec = Utils.cellValue(amount, outputTokenDec);\n        amountOutDec = await this.router.getAmountsIn(amountDec, path);\n        decimals = inputTokenDec;\n        break;\n    }\n    return Utils.convertValueFollowDecimal(amountOutDec, decimals);\n  };\n\n  calculatePriceImpact = async ({\n    inputToken,\n    outputToken,\n    amountIn,\n    amountOut,\n  }: InputParams.CalculatePriceImpact): Promise<string> => {\n    if (!inputToken || !outputToken || !amountIn || !amountOut)\n      throw new Error('Params input error.');\n    const {\n      decimals: inputTokenDec,\n      tokenAddress: inputTokenAddr,\n    } = inputToken;\n    const {\n      decimals: outputTokenDec,\n      tokenAddress: outputTokenAddr,\n    } = outputToken;\n\n    const { reserveA, reserveB } = await this.router.getReserves(\n      inputTokenAddr,\n      outputTokenAddr\n    );\n    if (!reserveA || reserveA === '0' || !reserveB || reserveB === '0')\n      return '0';\n\n    const amountInDec = Utils.cellValue(amountIn, inputTokenDec);\n    const amountOutDec = Utils.cellValue(amountOut, outputTokenDec);\n\n    const reserveAConvertBigInt = inputTokenDec\n      ? new Fraction(\n          JSBI.BigInt(reserveA),\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(inputTokenDec))\n        )\n      : new Fraction(JSBI.BigInt(reserveA));\n    const reserveBConvertBigInt = outputTokenDec\n      ? new Fraction(\n          JSBI.BigInt(reserveB),\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(outputTokenDec))\n        )\n      : new Fraction(JSBI.BigInt(reserveB));\n    const midPrice = reserveBConvertBigInt.divide(reserveAConvertBigInt);\n\n    const amountInFrac = new Fraction(\n      amountInDec,\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(inputTokenDec))\n    );\n    const amountOutFrac = new Fraction(\n      amountOutDec,\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(outputTokenDec))\n    );\n\n    const exactQuote = midPrice.multiply(amountInFrac);\n    const slippage = exactQuote.subtract(amountOutFrac).divide(exactQuote);\n    return slippage.multiply(100).toFixed(5);\n  };\n\n  calculateExchangeRate = async (\n    tokenA: Token,\n    tokenB: Token\n  ): Promise<{ rateAB: number; rateBA: number }> => {\n    const { reserveA, reserveB } = await this.router.getReserves(\n      tokenA.tokenAddress,\n      tokenB.tokenAddress\n    );\n    const tokenAValue = Utils.convertValueFollowDecimal(\n      JSBI.BigInt(reserveA).toString(),\n      tokenA.decimals\n    );\n    const tokenBValue = Utils.convertValueFollowDecimal(\n      JSBI.BigInt(reserveB).toString(),\n      tokenB.decimals\n    );\n    const _tokenAValue = Number(tokenAValue);\n    const _tokenBValue = Number(tokenBValue);\n    const rateAB = _tokenAValue ? _tokenBValue / _tokenAValue : 0;\n    const rateBA = _tokenBValue ? _tokenAValue / _tokenBValue : 0;\n    return { rateAB, rateBA };\n  };\n\n  public marketSwapCallParameters = ({\n    amountIn,\n    amountOut,\n    inputToken,\n    outputToken,\n    addressTo,\n    inputType,\n    txDeadline,\n    slippageTolerance,\n  }: InputParams.MarketSwap): SMCParams.CallParams => {\n    if (!amountIn || !amountOut || !addressTo || !inputToken || !outputToken)\n      throw new Error('Params input error.');\n    const kaiIn = this.isKAI(inputToken.tokenAddress);\n    const kaiOut = this.isKAI(outputToken.tokenAddress);\n    const amountInDec = Utils.cellValue(amountIn, inputToken.decimals);\n    const amountOutDec = Utils.cellValue(amountOut, outputToken.decimals);\n    const amountOutMinDec = Utils.calculateSlippageValue(\n      amountOutDec,\n      slippageTolerance,\n      'sub'\n    );\n    const amountInMaxDec = Utils.calculateSlippageValue(\n      amountInDec,\n      slippageTolerance,\n      'add'\n    );\n    const path = Utils.renderPair(\n      inputToken.tokenAddress,\n      outputToken.tokenAddress\n    );\n\n    let swapParams: SMCParams.CallParams = {} as SMCParams.CallParams;\n    switch (inputType) {\n      case InputType.EXACT_IN:\n        if (kaiIn) {\n          swapParams = {\n            methodName: methodNames.SWAP_EXACT_KAI_FOR_TOKENS,\n            args: [amountOutMinDec, path, addressTo, txDeadline],\n            amount: amountInDec,\n          } as SMCParams.CallParams;\n        } else if (kaiOut) {\n          swapParams = {\n            methodName: methodNames.SWAP_EXACT_TOKENS_FOR_KAI,\n            args: [amountInDec, amountOutMinDec, path, addressTo, txDeadline],\n          };\n        } else {\n          swapParams = {\n            methodName: methodNames.SWAP_EXACT_TOKENS_FOR_TOKENS,\n            args: [amountInDec, amountOutMinDec, path, addressTo, txDeadline],\n          };\n        }\n        break;\n      case InputType.EXACT_OUT:\n        if (kaiIn) {\n          swapParams = {\n            methodName: methodNames.SWAP_KAI_FOR_EXACT_TOKENS,\n            args: [amountOutDec, path, addressTo, txDeadline],\n            amount: amountInMaxDec,\n          };\n        } else if (kaiOut) {\n          swapParams = {\n            methodName: methodNames.SWAP_TOKENS_FOR_EXACT_KAI,\n            args: [amountOutDec, amountInMaxDec, path, addressTo, txDeadline],\n          };\n        } else {\n          swapParams = {\n            methodName: methodNames.SWAP_TOKENS_FOR_EXACT_TOKENS,\n            args: [amountOutDec, amountInMaxDec, path, addressTo, txDeadline],\n          };\n        }\n        break;\n    }\n    return swapParams;\n  };\n\n  public limitOrderCallParameters = ({\n    amountIn,\n    amountOut,\n    inputToken,\n    outputToken,\n    inputType,\n    tradeType,\n  }: InputParams.LimitOrder): SMCParams.CallParams => {\n    if (!amountIn || !amountOut || !inputToken || !outputToken)\n      throw new Error('Params input error.');\n    const {\n      tokenAddress: inputTokenAddr,\n      decimals: inputTokenDec,\n    } = inputToken;\n    const {\n      tokenAddress: outputTokenAddr,\n      decimals: outputTokenDec,\n    } = outputToken;\n    const amountInDec = Utils.cellValue(amountIn, inputTokenDec);\n    const amountOutDec = Utils.cellValue(amountOut, outputTokenDec);\n    const kaiIn = this.isKAI(inputToken.tokenAddress);\n    let swapParams: SMCParams.CallParams;\n    if (kaiIn) {\n      swapParams = {\n        methodName: methodNames.ORDER_INPUT_KAI,\n        args: [outputTokenAddr, amountOutDec, inputType, tradeType],\n        amount: amountInDec,\n      };\n    } else {\n      swapParams = {\n        methodName: methodNames.ORDER_INPUT_TOKENS,\n        args: [\n          inputTokenAddr,\n          amountInDec,\n          outputTokenAddr,\n          amountOutDec,\n          inputType,\n          tradeType,\n        ],\n      };\n    }\n    return swapParams;\n  };\n\n  cancelLimitOrder = ({\n    pairAddr,\n    orderID,\n  }: InputParams.CancelOrder): SMCParams.CallParams => {\n    if (!pairAddr || !orderID) throw new Error('Params input error.');\n    return {\n      methodName: methodNames.CANCEL_ORDER,\n      args: [pairAddr, orderID],\n    } as SMCParams.CallParams;\n  };\n}\n"],"names":["undefined","methodNames","GET_PAIR","GET_RESERVES","GET_AMOUNTS_OUT","GET_AMOUNTS_IN","GET_TOTAL_KAI_AMOUNTS_IN","ADD_LIQUIDITY","ADD_LIQUIDITY_KAI","REMOVE_LIQUIDITY","REMOVE_LIQUIDITY_KAI","SWAP_EXACT_TOKENS_FOR_TOKENS","SWAP_TOKENS_FOR_EXACT_TOKENS","SWAP_EXACT_KAI_FOR_TOKENS","SWAP_EXACT_TOKENS_FOR_KAI","SWAP_TOKENS_FOR_EXACT_KAI","SWAP_KAI_FOR_EXACT_TOKENS","APPROVE","ALLOWANCE","BALANCE_OF","TOTAL_SUPPLY","ORDER_INPUT_KAI","ORDER_INPUT_TOKENS","CANCEL_ORDER","abiJson","ROUTER","FACTORY","KRC20","LIMIT_ORDER","smcAddresses","WKAI","endpoint","AbstractSmcService","abi","smcAddress","client","contractAddr","methodName","params","kardiaContract","updateAbi","invokeContract","invoke","call","kardiaClient","kardiaAccount","account","contract","kardiaTransaction","transaction","kardiaChain","kaiChain","kardiaKrc20","krc20","Rounding","ONE","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","parseBigintIsh","bigintIsh","Number","Fraction","numerator","denominator","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","validatePath","path","length","KardiaAccount","isAddress","Error","RouterService","tokenA","tokenB","smcCallData","amountIn","result","amountOut","FactoryService","trim","KRC20Service","tokenAddress","walletAddress","spenderAddress","amount","getTotalSupply","TEN","ONE_FRACTION","cellValue","kaiValue","decimals","cellString","removeTrailingZeros","decimalStr","split","numberStr","padEnd","convertValueFollowDecimal","value","valueFrac","DecimalsbigNum","parseB","exponentiate","error","console","regEx1","regEx2","regEx3","valueInString","after","replace","indexOf","calculateSlippageValue","slippageTolerance","type","_value","slippageFrac","slippagePercent","calculateLiquidityProvidersFee","amountFrac","renderPair","tokenIn","tokenOut","Utils","KaidexService","options","abis","rpcEndpoint","wkai","toLowerCase","txDeadline","inputAmount","outputAmount","amountADesiredInDec","amountBDesiredInDec","calculatedAmountAMinInDec","calculatedAmountBMinInDec","amountADesired","amountBDesired","amountAMin","amountBMin","deadlineInMilliseconds","transformAddLiquidityParams","otherTokenAddress","isKAI","otherTokenDesiredAmount","otherTokenMinAmount","amountKAI","amountKAIMin","amountTokenMin","amountTokenDesired","pair","withdrawPercent","pairAddress","balanceOf","balance","totalSupply","liquidity","tokenABalance","_amountAMin","tokenBBalance","_amountBMin","transformRemoveLiquidityParams","otherToken","smcAddr","gasLimit","gasPrice","JSON","parse","stringify","txData","data","sendTransactionToExtension","gas","to","abiJSON","router","factory","limitOrder","defaultAddresses","KardiaClient","defaultEndpoint","TradeType","InputType","KaidexClient","getPair","getReserves","tokenAddr","amountToCheck","getAllowance","currentAllowance","inputToken","outputToken","transformAddLiquidityKAIParams","args","transformRemoveLiquidityKAIParams","inputType","inputTokenAddr","inputTokenDec","outputTokenAddr","outputTokenDec","amountOutDec","EXACT_IN","EXACT_OUT","amountDec","getAmountsOut","getAmountsIn","reserveA","reserveB","amountInDec","reserveAConvertBigInt","reserveBConvertBigInt","midPrice","amountInFrac","amountOutFrac","exactQuote","slippage","tokenAValue","tokenBValue","_tokenAValue","_tokenBValue","rateAB","rateBA","addressTo","kaiIn","kaiOut","amountOutMinDec","amountInMaxDec","swapParams","tradeType","pairAddr","orderID"],"mappings":"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"}