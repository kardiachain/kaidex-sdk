{"version":3,"file":"kaidex-sdk.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/constants/methodNames.ts","../src/constants/index.ts","../src/entities/abstract-smc-service.ts","../src/types/enums.ts","../src/entities/fraction.ts","../src/services/router.ts","../src/services/factory.ts","../src/services/krc20.ts","../src/utils/index.ts","../src/entities/kaidex-service.ts","../src/types/input-params.ts","../src/entities/kaidex-client.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export const methodNames = {\r\n  //Factory\r\n  GET_PAIR: 'getPair',\r\n\r\n  //Router\r\n  GET_RESERVES: 'getReserves',\r\n  GET_AMOUNTS_OUT: 'getAmountsOut',\r\n  GET_AMOUNTS_IN: 'getAmountsIn',\r\n  GET_TOTAL_KAI_AMOUNTS_IN: 'getTotalKAIAmountsIn',\r\n  ADD_LIQUIDITY: 'addLiquidity',\r\n  ADD_LIQUIDITY_KAI: 'addLiquidityKAI',\r\n  REMOVE_LIQUIDITY: 'removeLiquidity',\r\n  REMOVE_LIQUIDITY_KAI: 'removeLiquidityKAI',\r\n  SWAP_EXACT_TOKENS_FOR_TOKENS: 'swapExactTokensForTokens',\r\n  SWAP_TOKENS_FOR_EXACT_TOKENS: 'swapTokensForExactTokens',\r\n  SWAP_EXACT_KAI_FOR_TOKENS: 'swapExactKAIForTokens',\r\n  SWAP_EXACT_TOKENS_FOR_KAI: 'swapExactTokensForKAI',\r\n  SWAP_TOKENS_FOR_EXACT_KAI: 'swapTokensForExactKAI',\r\n  SWAP_KAI_FOR_EXACT_TOKENS: 'swapKAIForExactTokens',\r\n\r\n  //KRC20\r\n  APPROVE: 'approve',\r\n  ALLOWANCE: 'allowance',\r\n  BALANCE_OF: 'balanceOf',\r\n  TOTAL_SUPPLY: 'totalSupply',\r\n\r\n  //Limit order\r\n  ORDER_INPUT_KAI: 'orderInputKAI',\r\n  ORDER_INPUT_TOKENS: 'orderInputTokens',\r\n  CANCEL_ORDER: 'cancelOrder',\r\n};\r\n","import ROUTER from './abi/router.json';\r\nimport FACTORY from './abi/factory.json';\r\nimport KRC20 from './abi/krc20.json';\r\nimport LIMIT_ORDER from './abi/limit-order.json';\r\n\r\nexport const abiJson = {\r\n  ROUTER,\r\n  FACTORY,\r\n  KRC20,\r\n  LIMIT_ORDER,\r\n};\r\n\r\nexport const smcAddresses = {\r\n  ROUTER: '0xD15afC6d61eD34d968176397a89fE5Cbd824D493',\r\n  FACTORY: '0x053Fdaff144a44731f2D9B3847947a9f1c1487Cc',\r\n  LIMIT_ORDER: '0x3E88CE7E64Bb2763CB8e40CF0d6eb9669f391A6b',\r\n  WKAI: '0xbedD01A19B321C01279167709DfF6c7419Eb8AC7',\r\n};\r\nexport const endpoint = 'https://dev-1.kardiachain.io';\r\nexport * from './methodNames';\r\n","import KardiaClient, {\r\n  KAIChain,\r\n  KardiaAccount,\r\n  KardiaTransaction,\r\n  KRC20,\r\n} from 'kardia-js-sdk';\r\n\r\nimport KardiaContract from 'kardia-js-sdk/dist/smc';\r\n\r\nexport abstract class AbstractSmcService {\r\n  readonly abi: any;\r\n  readonly smcAddress: string;\r\n  readonly kardiaClient: KardiaClient;\r\n  readonly kardiaAccount: KardiaAccount;\r\n  readonly kardiaContract: KardiaContract;\r\n  readonly kardiaTransaction: KardiaTransaction;\r\n  readonly kardiaChain: KAIChain;\r\n  readonly kardiaKrc20: KRC20;\r\n\r\n  constructor({\r\n    abi,\r\n    smcAddress,\r\n    client,\r\n  }: {\r\n    abi: any;\r\n    smcAddress: string;\r\n    client: KardiaClient;\r\n  }) {\r\n    this.abi = abi;\r\n    this.smcAddress = smcAddress;\r\n    this.kardiaClient = client;\r\n    this.kardiaAccount = client.account;\r\n    this.kardiaContract = client.contract;\r\n    this.kardiaTransaction = client.transaction;\r\n    this.kardiaChain = client.kaiChain;\r\n    this.kardiaKrc20 = client.krc20;\r\n  }\r\n\r\n  smcCallData = async ({\r\n    abi,\r\n    contractAddr,\r\n    methodName,\r\n    params,\r\n  }: {\r\n    abi: any;\r\n    contractAddr: string;\r\n    methodName: string;\r\n    params: any[];\r\n  }) => {\r\n    this.kardiaContract.updateAbi(abi);\r\n    const invoke = await this.kardiaContract.invokeContract(methodName, params);\r\n    return await invoke.call(contractAddr, {}, 'latest');\r\n  };\r\n}\r\n","export enum Rounding {\r\n  ROUND_DOWN,\r\n  ROUND_HALF_UP,\r\n  ROUND_UP,\r\n}\r\n","import JSBI from 'jsbi';\r\nimport _Decimal from 'decimal.js-light';\r\nimport _Big from 'big.js';\r\nimport toFormat from 'toformat';\r\nimport { Rounding } from '../types/enums';\r\nimport { BigintIsh } from '../types/bigint';\r\n\r\nconst ONE = JSBI.BigInt(1);\r\n\r\nconst Decimal = toFormat(_Decimal);\r\nconst Big = toFormat(_Big);\r\n\r\nconst toSignificantRounding = {\r\n  [Rounding.ROUND_DOWN]: 0,\r\n  [Rounding.ROUND_HALF_UP]: 1,\r\n  [Rounding.ROUND_UP]: 2,\r\n};\r\n\r\nconst toFixedRounding = {\r\n  [Rounding.ROUND_DOWN]: 0,\r\n  [Rounding.ROUND_HALF_UP]: 1,\r\n  [Rounding.ROUND_UP]: 2,\r\n};\r\n\r\nexport function parseBigintIsh(bigintIsh: BigintIsh): JSBI {\r\n  return bigintIsh instanceof JSBI ? bigintIsh : JSBI.BigInt(Number(bigintIsh));\r\n}\r\n\r\nexport class Fraction {\r\n  public readonly numerator: JSBI;\r\n  public readonly denominator: JSBI;\r\n\r\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = ONE) {\r\n    this.numerator = parseBigintIsh(numerator);\r\n    this.denominator = parseBigintIsh(denominator);\r\n  }\r\n\r\n  // performs floor division\r\n  public get quotient(): JSBI {\r\n    return JSBI.divide(this.numerator, this.denominator);\r\n  }\r\n\r\n  // remainder after floor division\r\n  public get remainder(): Fraction {\r\n    return new Fraction(\r\n      JSBI.remainder(this.numerator, this.denominator),\r\n      this.denominator\r\n    );\r\n  }\r\n\r\n  public invert(): Fraction {\r\n    return new Fraction(this.denominator, this.numerator);\r\n  }\r\n\r\n  public add(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n      return new Fraction(\r\n        JSBI.add(this.numerator, otherParsed.numerator),\r\n        this.denominator\r\n      );\r\n    }\r\n    return new Fraction(\r\n      JSBI.add(\r\n        JSBI.multiply(this.numerator, otherParsed.denominator),\r\n        JSBI.multiply(otherParsed.numerator, this.denominator)\r\n      ),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    );\r\n  }\r\n\r\n  public subtract(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n      return new Fraction(\r\n        JSBI.subtract(this.numerator, otherParsed.numerator),\r\n        this.denominator\r\n      );\r\n    }\r\n    return new Fraction(\r\n      JSBI.subtract(\r\n        JSBI.multiply(this.numerator, otherParsed.denominator),\r\n        JSBI.multiply(otherParsed.numerator, this.denominator)\r\n      ),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    );\r\n  }\r\n\r\n  public lessThan(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    return JSBI.lessThan(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    );\r\n  }\r\n\r\n  public equalTo(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    return JSBI.equal(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    );\r\n  }\r\n\r\n  public greaterThan(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    return JSBI.greaterThan(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    );\r\n  }\r\n\r\n  public multiply(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    return new Fraction(\r\n      JSBI.multiply(this.numerator, otherParsed.numerator),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    );\r\n  }\r\n\r\n  public divide(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed =\r\n      other instanceof Fraction ? other : new Fraction(parseBigintIsh(other));\r\n    return new Fraction(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(this.denominator, otherParsed.numerator)\r\n    );\r\n  }\r\n\r\n  public toSignificant(\r\n    significantDigits: number,\r\n    format: object = { groupSeparator: '' },\r\n    rounding: Rounding = Rounding.ROUND_HALF_UP\r\n  ): string {\r\n    Decimal.set({\r\n      precision: significantDigits + 1,\r\n      rounding: toSignificantRounding[rounding],\r\n    });\r\n    const quotient = new Decimal(this.numerator.toString())\r\n      .div(this.denominator.toString())\r\n      .toSignificantDigits(significantDigits);\r\n    return quotient.toFormat(quotient.decimalPlaces(), format);\r\n  }\r\n\r\n  public toFixed(\r\n    decimalPlaces: number = 0,\r\n    format: object = { groupSeparator: '' },\r\n    rounding: Rounding = Rounding.ROUND_HALF_UP\r\n  ): string {\r\n    Big.DP = decimalPlaces;\r\n    Big.RM = toFixedRounding[rounding];\r\n    return new Big(this.numerator.toString())\r\n      .div(this.denominator.toString())\r\n      .toFormat(decimalPlaces, format);\r\n  }\r\n}\r\n","import { methodNames } from '../constants';\r\nimport JSBI from 'jsbi';\r\nimport { AbstractSmcService } from '../entities';\r\nimport { KardiaAccount } from 'kardia-js-sdk';\r\nimport { PooledTokens } from '../types';\r\n\r\nconst validatePath = (path: string[]): void => {\r\n  if (\r\n    !path ||\r\n    !path.length ||\r\n    !path[0] ||\r\n    !KardiaAccount.isAddress(path[0]) ||\r\n    !path[1] ||\r\n    !KardiaAccount.isAddress(path[1])\r\n  )\r\n    throw new Error('Invalid token address!');\r\n};\r\n\r\nexport class RouterService extends AbstractSmcService {\r\n  getReserves = async (\r\n    tokenA: string,\r\n    tokenB: string\r\n  ): Promise<PooledTokens> => {\r\n    if (!KardiaAccount.isAddress(tokenA) || !KardiaAccount.isAddress(tokenB))\r\n      throw new Error('Invalid token!');\r\n\r\n    return this.smcCallData({\r\n      abi: this.abi,\r\n      contractAddr: this.smcAddress,\r\n      methodName: methodNames.GET_RESERVES,\r\n      params: [tokenA, tokenB],\r\n    });\r\n  };\r\n\r\n  getAmountsOut = async (amountIn: string, path: string[]): Promise<string> => {\r\n    if (!amountIn) throw new Error('Invalid input amount!');\r\n    validatePath(path);\r\n    const result = await this.smcCallData({\r\n      abi: this.abi,\r\n      contractAddr: this.smcAddress,\r\n      methodName: methodNames.GET_AMOUNTS_OUT,\r\n      params: [amountIn, path],\r\n    });\r\n    return result && result.length > 0 ? JSBI.BigInt(result[1]).toString() : '';\r\n  };\r\n\r\n  getAmountsIn = async (amountOut: string, path: string[]): Promise<string> => {\r\n    if (!amountOut) throw new Error('Invalid input amount!');\r\n    validatePath(path);\r\n    const result = await this.smcCallData({\r\n      abi: this.abi,\r\n      contractAddr: this.smcAddress,\r\n      methodName: methodNames.GET_AMOUNTS_IN,\r\n      params: [amountOut, path],\r\n    });\r\n    return result && result.length > 0 ? JSBI.BigInt(result[0]).toString() : '';\r\n  };\r\n}\r\n","import { methodNames } from '../constants';\r\nimport { AbstractSmcService } from '../entities';\r\n\r\nexport class FactoryService extends AbstractSmcService {\r\n  getPair = (tokenA: string, tokenB: string): Promise<string> => {\r\n    if (!tokenA.trim() || !tokenB.trim()) throw new Error('Invalid token!');\r\n\r\n    return this.smcCallData({\r\n      abi: this.abi,\r\n      contractAddr: this.smcAddress,\r\n      methodName: methodNames.GET_PAIR,\r\n      params: [tokenA, tokenB],\r\n    });\r\n  };\r\n}\r\n","import JSBI from 'jsbi';\r\nimport { methodNames } from '../constants';\r\nimport { AbstractSmcService } from '../entities';\r\nimport { KardiaAccount } from 'kardia-js-sdk';\r\n\r\nexport class KRC20Service extends AbstractSmcService {\r\n  getAllowance = async (\r\n    tokenAddress: string,\r\n    walletAddress: string,\r\n    spenderAddress: string\r\n  ): Promise<JSBI> => {\r\n    if (!KardiaAccount.isAddress(tokenAddress))\r\n      throw new Error('Invalid token Address');\r\n    if (!KardiaAccount.isAddress(walletAddress))\r\n      throw new Error('Invalid wallet address');\r\n\r\n    const amount = await this.smcCallData({\r\n      abi: this.abi,\r\n      contractAddr: tokenAddress,\r\n      methodName: methodNames.ALLOWANCE,\r\n      params: [walletAddress, spenderAddress],\r\n    });\r\n    return JSBI.BigInt(amount);\r\n  };\r\n\r\n  balanceOf = (tokenAddress: string, walletAddress: string) => {\r\n    if (!KardiaAccount.isAddress(tokenAddress))\r\n      throw new Error('Invalid token Address');\r\n    if (!KardiaAccount.isAddress(walletAddress))\r\n      throw new Error('Invalid wallet address');\r\n\r\n    return this.smcCallData({\r\n      abi: this.abi,\r\n      methodName: methodNames.BALANCE_OF,\r\n      contractAddr: tokenAddress,\r\n      params: [walletAddress],\r\n    });\r\n  };\r\n\r\n  getTotalSupply(tokenAddress: string) {\r\n    if (!KardiaAccount.isAddress(tokenAddress))\r\n      throw new Error('Invalid token Address');\r\n\r\n    return this.smcCallData({\r\n      abi: this.abi,\r\n      contractAddr: tokenAddress,\r\n      methodName: methodNames.TOTAL_SUPPLY,\r\n      params: [],\r\n    });\r\n  }\r\n}\r\n","import JSBI from 'jsbi';\r\nimport { Fraction } from '../entities/fraction';\r\nimport { BigNumber } from 'bignumber.js';\r\nexport const ONE = JSBI.BigInt(1);\r\nexport const TEN = JSBI.BigInt(10);\r\nconst ONE_FRACTION = new Fraction(1);\r\n\r\nconst cellValue = (kaiValue: any, decimals: number = 18): string => {\r\n  const rawValue = new BigNumber(kaiValue);\r\n  return rawValue.multipliedBy(new BigNumber(10 ** decimals)).toFixed(0, 1);\r\n};\r\n\r\nconst convertValueFollowDecimal = (\r\n  value: Fraction | string,\r\n  decimals: number\r\n): string => {\r\n  try {\r\n    const valueFrac = typeof value === 'string' ? new Fraction(value) : value;\r\n    if (valueFrac.equalTo(0)) {\r\n      return '0';\r\n    }\r\n\r\n    if (decimals === undefined || decimals === null) {\r\n      return valueFrac.toFixed();\r\n    }\r\n\r\n    const DecimalsbigNum = JSBI.BigInt(decimals);\r\n    const parseB = JSBI.exponentiate(TEN, DecimalsbigNum).toString();\r\n    return removeTrailingZeros(valueFrac.divide(parseB).toFixed(decimals));\r\n  } catch (error) {\r\n    console.error('Error converting value from decimal:', error);\r\n    return '0';\r\n  }\r\n};\r\n\r\nconst removeTrailingZeros = (value: any): string => {\r\n  const regEx1 = /^[0]+/;\r\n  const regEx2 = /[0]+$/;\r\n  const regEx3 = /[.]$/;\r\n\r\n  const valueInString = value.toString();\r\n\r\n  let after = valueInString.replace(regEx1, ''); // Remove leading 0's\r\n\r\n  if (after.indexOf('.') > -1) {\r\n    after = after.replace(regEx2, ''); // Remove trailing 0's\r\n  }\r\n  after = after.replace(regEx3, ''); // Remove trailing decimal\r\n\r\n  if (after.indexOf('.') === 0) {\r\n    after = '0' + after;\r\n  }\r\n  return after ? after : '0';\r\n};\r\n\r\nconst calculateSlippageValue = (\r\n  value: string,\r\n  slippageTolerance: string | number,\r\n  type: 'add' | 'sub'\r\n): string => {\r\n  try {\r\n    const _value = new Fraction(value);\r\n    const slippageFrac = new Fraction(\r\n      cellValue(slippageTolerance),\r\n      cellValue(100)\r\n    );\r\n    let slippagePercent: Fraction;\r\n    if (type === 'sub') {\r\n      if (Number(slippageTolerance) > 100) {\r\n        return '0';\r\n      }\r\n      slippagePercent = ONE_FRACTION.subtract(slippageFrac);\r\n    } else {\r\n      slippagePercent = ONE_FRACTION.add(slippageFrac);\r\n    }\r\n    return _value.multiply(slippagePercent).toFixed();\r\n  } catch (error) {\r\n    console.error('Error calculating slippage value:', error);\r\n    return '';\r\n  }\r\n};\r\n\r\nconst calculateLiquidityProvidersFee = (amountIn: string | number): string => {\r\n  const amountFrac = new Fraction(amountIn);\r\n\r\n  return amountFrac\r\n    .multiply(3)\r\n    .divide(1000)\r\n    .toFixed();\r\n};\r\n\r\nconst renderPair = (tokenIn: string, tokenOut: string): string[] => {\r\n  if (!tokenIn || !tokenOut)\r\n    throw new Error('Error render pair: token not found!');\r\n  return [tokenIn, tokenOut];\r\n};\r\n\r\nexport const Utils = {\r\n  cellValue,\r\n  convertValueFollowDecimal,\r\n  calculateSlippageValue,\r\n  calculateLiquidityProvidersFee,\r\n  renderPair,\r\n};\r\n","import KardiaClient from 'kardia-js-sdk';\r\nimport {\r\n  abiJson,\r\n  endpoint as defaultEndpoint,\r\n  smcAddresses as defaultAddresses,\r\n} from '../constants';\r\nimport { FactoryService, RouterService, KRC20Service } from '../services';\r\nimport {\r\n  ABIS,\r\n  KaidexOptions,\r\n  SmcAddresses,\r\n  SMCParams,\r\n  InputParams,\r\n} from '../types';\r\nimport { KardiaAccount } from 'kardia-js-sdk';\r\nimport { Utils } from '../utils';\r\nimport { Fraction } from './fraction';\r\n\r\nexport abstract class KaidexService {\r\n  protected abiJSON: Required<ABIS>;\r\n  protected smcAddresses: Required<SmcAddresses>;\r\n  protected kardiaClient: KardiaClient;\r\n\r\n  public factory: FactoryService;\r\n  public router: RouterService;\r\n  public krc20: KRC20Service;\r\n\r\n  constructor(\r\n    options: KaidexOptions = {\r\n      abis: {},\r\n      smcAddresses: {},\r\n      rpcEndpoint: '',\r\n    }\r\n  ) {\r\n    const { abis, rpcEndpoint, smcAddresses } = options;\r\n\r\n    this.abiJSON = {\r\n      router: (abis && abis.router) || abiJson.ROUTER,\r\n      factory: (abis && abis.factory) || abiJson.FACTORY,\r\n      krc20: (abis && abis.krc20) || abiJson.KRC20,\r\n      limitOrder: (abis && abis.limitOrder) || abiJson.LIMIT_ORDER,\r\n    };\r\n\r\n    this.smcAddresses = {\r\n      router: (smcAddresses && smcAddresses.router) || defaultAddresses.ROUTER,\r\n      factory:\r\n        (smcAddresses && smcAddresses.factory) || defaultAddresses.FACTORY,\r\n      limitOrder:\r\n        (smcAddresses && smcAddresses.limitOrder) ||\r\n        defaultAddresses.LIMIT_ORDER,\r\n      wkai: (smcAddresses && smcAddresses.wkai) || defaultAddresses.WKAI,\r\n    };\r\n\r\n    this.kardiaClient = new KardiaClient({\r\n      endpoint: rpcEndpoint || defaultEndpoint,\r\n    });\r\n\r\n    this.factory = new FactoryService({\r\n      abi: this.abiJSON.factory,\r\n      smcAddress: this.smcAddresses.factory,\r\n      client: this.kardiaClient,\r\n    });\r\n\r\n    this.router = new RouterService({\r\n      abi: this.abiJSON.router,\r\n      smcAddress: this.smcAddresses.router,\r\n      client: this.kardiaClient,\r\n    });\r\n\r\n    this.krc20 = new KRC20Service({\r\n      abi: this.abiJSON.krc20,\r\n      client: this.kardiaClient,\r\n      smcAddress: '',\r\n    });\r\n  }\r\n\r\n  public get abis() {\r\n    return this.abiJSON;\r\n  }\r\n\r\n  public get addresses() {\r\n    return this.smcAddresses;\r\n  }\r\n\r\n  public isKAI = (tokenAddress: string) =>\r\n    !!(\r\n      tokenAddress &&\r\n      this.smcAddresses.wkai &&\r\n      tokenAddress.toLowerCase() === this.smcAddresses.wkai.toLowerCase()\r\n    );\r\n\r\n  protected transformAddLiquidityParams = (\r\n    params: InputParams.AddLiquidity\r\n  ): SMCParams.AddLiquidity => {\r\n    const {\r\n      slippageTolerance,\r\n      txDeadline,\r\n      inputAmount,\r\n      outputAmount,\r\n      tokenA,\r\n      tokenB,\r\n      walletAddress,\r\n    } = params;\r\n\r\n    if (!KardiaAccount.isAddress(walletAddress))\r\n      throw new Error('Invalid wallet address');\r\n    if (\r\n      !KardiaAccount.isAddress(tokenA.tokenAddress) ||\r\n      !KardiaAccount.isAddress(tokenB.tokenAddress)\r\n    )\r\n      throw new Error('Invalid token address');\r\n\r\n    const amountADesiredInDec = inputAmount\r\n      ? Utils.cellValue(inputAmount, tokenA.decimals)\r\n      : '0';\r\n    const amountBDesiredInDec = outputAmount\r\n      ? Utils.cellValue(outputAmount, tokenB.decimals)\r\n      : '0';\r\n    const calculatedAmountAMinInDec = inputAmount\r\n      ? Utils.calculateSlippageValue(\r\n          amountADesiredInDec,\r\n          slippageTolerance,\r\n          'sub'\r\n        )\r\n      : '0';\r\n    const calculatedAmountBMinInDec = outputAmount\r\n      ? Utils.calculateSlippageValue(\r\n          amountBDesiredInDec,\r\n          slippageTolerance,\r\n          'sub'\r\n        )\r\n      : '0';\r\n\r\n    if (\r\n      !amountADesiredInDec ||\r\n      !calculatedAmountAMinInDec ||\r\n      !amountBDesiredInDec ||\r\n      !calculatedAmountBMinInDec\r\n    )\r\n      throw new Error('Invalid token amount');\r\n    if (!txDeadline) throw new Error('Invalid deadline');\r\n\r\n    return {\r\n      tokenA: tokenA.tokenAddress,\r\n      tokenB: tokenB.tokenAddress,\r\n      amountADesired: amountADesiredInDec,\r\n      amountBDesired: amountBDesiredInDec,\r\n      amountAMin: calculatedAmountAMinInDec,\r\n      amountBMin: calculatedAmountBMinInDec,\r\n      walletAddress,\r\n      deadlineInMilliseconds: txDeadline,\r\n    };\r\n  };\r\n\r\n  protected transformAddLiquidityKAIParams = (\r\n    params: InputParams.AddLiquidity\r\n  ): SMCParams.AddLiquidityKAI => {\r\n    const {\r\n      amountADesired,\r\n      amountBDesired,\r\n      amountAMin,\r\n      amountBMin,\r\n      tokenA,\r\n      tokenB,\r\n      walletAddress,\r\n      deadlineInMilliseconds,\r\n    } = this.transformAddLiquidityParams(params);\r\n\r\n    const otherTokenAddress = this.isKAI(tokenA) ? tokenB : tokenA;\r\n    const otherTokenDesiredAmount = this.isKAI(tokenA)\r\n      ? amountBDesired\r\n      : amountADesired;\r\n    const otherTokenMinAmount = this.isKAI(tokenA) ? amountBMin : amountAMin;\r\n    const amountKAI = this.isKAI(tokenA) ? amountADesired : amountBDesired;\r\n    const amountKAIMin = this.isKAI(tokenA) ? amountAMin : amountBMin;\r\n\r\n    if (!KardiaAccount.isAddress(walletAddress))\r\n      throw new Error('Invalid wallet address');\r\n    if (!KardiaAccount.isAddress(tokenA) || !KardiaAccount.isAddress(tokenB))\r\n      throw new Error('Invalid token address');\r\n    if (!amountADesired || !amountAMin || !amountBDesired || !amountBMin)\r\n      throw new Error('Invalid token amount');\r\n    if (!deadlineInMilliseconds) throw new Error('Invalid deadline');\r\n\r\n    return {\r\n      tokenAddress: otherTokenAddress,\r\n      amountTokenMin: otherTokenMinAmount,\r\n      amountTokenDesired: otherTokenDesiredAmount,\r\n      amountKAI: amountKAI,\r\n      amountKAIMin: amountKAIMin,\r\n      walletAddress,\r\n      deadlineInMilliseconds,\r\n    };\r\n  };\r\n\r\n  protected transformRemoveLiquidityParams = async (\r\n    params: InputParams.RemoveLiquidity\r\n  ): Promise<SMCParams.RemoveLiquidity> => {\r\n    const {\r\n      pair,\r\n      withdrawAmount,\r\n      walletAddress,\r\n      slippageTolerance,\r\n      txDeadline,\r\n    } = params;\r\n    const { tokenA, tokenB, pairAddress } = pair;\r\n\r\n    const balance = await this.krc20.balanceOf(pairAddress, walletAddress);\r\n\r\n    if (!Number(withdrawAmount)) throw new Error('Invalid amount!');\r\n    if (!walletAddress) throw new Error('Invalid wallet!');\r\n    if (!Number(balance) || Number(withdrawAmount) > Number(balance))\r\n      throw new Error('Not enough balance!');\r\n\r\n    const totalSupply = await this.krc20.getTotalSupply(pairAddress);\r\n\r\n    const withdrawPercent = new Fraction(withdrawAmount)\r\n      .divide(balance)\r\n      .multiply(100);\r\n\r\n    const tokenABalance = await this.krc20.balanceOf(\r\n      tokenA.tokenAddress,\r\n      pairAddress\r\n    );\r\n\r\n    //amountAMin = (balance / totalSupply) * tokenABalance * withdrawPercent / 100\r\n    const amountAMin = new Fraction(balance)\r\n      .divide(totalSupply)\r\n      .multiply(tokenABalance)\r\n      .multiply(withdrawPercent)\r\n      .divide(100)\r\n      .toFixed();\r\n\r\n    const _amountAMin = Utils.calculateSlippageValue(\r\n      amountAMin,\r\n      slippageTolerance,\r\n      'sub'\r\n    );\r\n    const tokenBBalance = await this.krc20.balanceOf(\r\n      tokenB.tokenAddress,\r\n      pairAddress\r\n    );\r\n\r\n    //amountBMin = (balance / totalSupply) * tokenBBalance * withdrawPercent / 100\r\n    const amountBMin = new Fraction(balance)\r\n      .divide(totalSupply)\r\n      .multiply(tokenBBalance)\r\n      .multiply(withdrawPercent)\r\n      .divide(100)\r\n      .toFixed();\r\n\r\n    const _amountBMin = Utils.calculateSlippageValue(\r\n      amountBMin,\r\n      slippageTolerance,\r\n      'sub'\r\n    );\r\n\r\n    return {\r\n      tokenA: tokenA.tokenAddress,\r\n      tokenB: tokenB.tokenAddress,\r\n      liquidity: withdrawAmount,\r\n      amountAMin: _amountAMin,\r\n      amountBMin: _amountBMin,\r\n      walletAddress,\r\n      deadlineInMilliseconds: txDeadline,\r\n    };\r\n  };\r\n\r\n  protected transformRemoveLiquidityKAIParams = async (\r\n    params: InputParams.RemoveLiquidity\r\n  ): Promise<SMCParams.RemoveLiquidityKAI> => {\r\n    const {\r\n      tokenA,\r\n      tokenB,\r\n      liquidity,\r\n      amountAMin,\r\n      amountBMin,\r\n      walletAddress,\r\n      deadlineInMilliseconds,\r\n    } = await this.transformRemoveLiquidityParams(params);\r\n\r\n    const otherToken = this.isKAI(tokenA) ? tokenB : tokenA;\r\n    const amountKAIMin = this.isKAI(tokenA) ? amountAMin : amountBMin;\r\n    const amountTokenMin = this.isKAI(tokenA) ? amountBMin : amountAMin;\r\n\r\n    return {\r\n      tokenAddress: otherToken,\r\n      liquidity: liquidity,\r\n      amountKAIMin: amountKAIMin,\r\n      amountTokenMin: amountTokenMin,\r\n      walletAddress,\r\n      deadlineInMilliseconds,\r\n    };\r\n  };\r\n\r\n  public invokeSMC = async ({\r\n    abi,\r\n    smcAddr,\r\n    methodName,\r\n    params,\r\n    amount = 0,\r\n    gasLimit = 5000000,\r\n    gasPrice = 1,\r\n  }: SMCParams.InvokeParams) => {\r\n    const abiJson =\r\n      typeof abi === 'string'\r\n        ? JSON.parse(abi)\r\n        : JSON.parse(JSON.stringify(abi));\r\n    this.kardiaClient.contract.updateAbi(abiJson);\r\n    const data = await this.kardiaClient.contract\r\n      .invokeContract(methodName, params)\r\n      .txData();\r\n    return this.kardiaClient.transaction.sendTransactionToExtension(\r\n      {\r\n        gas: gasLimit,\r\n        gasPrice: gasPrice,\r\n        value: amount,\r\n        to: smcAddr,\r\n        data: data,\r\n      },\r\n      true\r\n    );\r\n  };\r\n}\r\n","import { LiquidityPair, Token } from './index';\r\n\r\nexport enum TradeType {\r\n  BUY = 0,\r\n  SELL = 1,\r\n}\r\n\r\nexport enum InputType {\r\n  EXACT_IN = 0,\r\n  EXACT_OUT = 1,\r\n}\r\n\r\nexport declare namespace InputParams {\r\n  interface CalculateOutputAmount {\r\n    amount: number | string;\r\n    inputToken: Token;\r\n    outputToken: Token;\r\n    inputType: InputType;\r\n  }\r\n\r\n  interface CalculatePriceImpact {\r\n    inputToken: Token;\r\n    outputToken: Token;\r\n    amountIn: string;\r\n    amountOut: string;\r\n  }\r\n\r\n  interface AddLiquidity {\r\n    inputAmount: string | number;\r\n    outputAmount: string | number;\r\n    tokenA: Token;\r\n    tokenB: Token;\r\n    walletAddress: string;\r\n    slippageTolerance: string | number;\r\n    txDeadline: number;\r\n  }\r\n\r\n  interface RemoveLiquidity {\r\n    pair: LiquidityPair;\r\n    withdrawAmount: string;\r\n    walletAddress: string;\r\n    slippageTolerance: string | number;\r\n    txDeadline: number;\r\n  }\r\n\r\n  interface MarketSwap {\r\n    amountIn: string;\r\n    amountOut: string;\r\n    inputToken: Token;\r\n    outputToken: Token;\r\n    addressTo: string;\r\n    inputType: InputType;\r\n    txDeadline: number;\r\n    slippageTolerance: string | number;\r\n  }\r\n\r\n  interface LimitOrder {\r\n    amountIn: string;\r\n    amountOut: string;\r\n    inputToken: Token;\r\n    outputToken: Token;\r\n    tradeType: TradeType;\r\n    inputType: InputType;\r\n  }\r\n\r\n  interface CancelOrder {\r\n    pairAddr: string;\r\n    orderID: number;\r\n  }\r\n}\r\n","import { KaidexService } from './kaidex-service';\r\nimport JSBI from 'jsbi';\r\nimport { methodNames } from '../constants';\r\nimport { Utils } from '../utils';\r\nimport { Fraction } from './fraction';\r\nimport { SMCParams, Token, InputParams, InputType } from '../types';\r\n\r\nexport class KaidexClient extends KaidexService {\r\n  getPair = (tokenA: string, tokenB: string): Promise<string> =>\r\n    this.factory.getPair(tokenA, tokenB);\r\n\r\n  getReverses = (tokenA: string, tokenB: string) =>\r\n    this.router.getReserves(tokenA, tokenB);\r\n\r\n  getApprovalState = async ({\r\n    tokenAddr,\r\n    decimals,\r\n    walletAddress,\r\n    spenderAddress,\r\n    amountToCheck,\r\n  }: {\r\n    tokenAddr: string;\r\n    decimals: number;\r\n    walletAddress: string;\r\n    spenderAddress: string;\r\n    amountToCheck: number | string;\r\n  }): Promise<boolean> => {\r\n    if (this.isKAI(tokenAddr)) return true;\r\n    const currentAllowance = await this.krc20.getAllowance(\r\n      tokenAddr,\r\n      walletAddress,\r\n      spenderAddress\r\n    );\r\n\r\n    return !JSBI.lessThan(\r\n      currentAllowance,\r\n      JSBI.BigInt(Utils.cellValue(amountToCheck, decimals))\r\n    );\r\n  };\r\n\r\n  getTokenBalance = (\r\n    tokenAddress: string,\r\n    walletAddress: string\r\n  ): Promise<string> => {\r\n    return this.krc20.balanceOf(tokenAddress, walletAddress);\r\n  };\r\n\r\n  addLiquidityCallParameters = (\r\n    params: InputParams.AddLiquidity\r\n  ): SMCParams.CallParams => {\r\n    const { tokenA: inputToken, tokenB: outputToken } = params;\r\n    // For KAI Pairs\r\n    if (\r\n      this.isKAI(inputToken.tokenAddress) ||\r\n      this.isKAI(outputToken.tokenAddress)\r\n    ) {\r\n      const {\r\n        tokenAddress,\r\n        amountTokenMin,\r\n        amountTokenDesired,\r\n        amountKAI,\r\n        amountKAIMin,\r\n        walletAddress,\r\n        deadlineInMilliseconds,\r\n      } = this.transformAddLiquidityKAIParams(params);\r\n\r\n      return {\r\n        methodName: methodNames.ADD_LIQUIDITY_KAI,\r\n        args: [\r\n          tokenAddress,\r\n          amountTokenDesired,\r\n          amountTokenMin,\r\n          amountKAIMin,\r\n          walletAddress,\r\n          deadlineInMilliseconds,\r\n        ],\r\n        amount: amountKAI,\r\n      };\r\n    }\r\n\r\n    const {\r\n      tokenA,\r\n      tokenB,\r\n      amountADesired,\r\n      amountBDesired,\r\n      amountAMin,\r\n      amountBMin,\r\n      walletAddress,\r\n      deadlineInMilliseconds,\r\n    } = this.transformAddLiquidityParams(params);\r\n\r\n    return {\r\n      methodName: methodNames.ADD_LIQUIDITY,\r\n      args: [\r\n        tokenA,\r\n        tokenB,\r\n        amountADesired,\r\n        amountBDesired,\r\n        amountAMin,\r\n        amountBMin,\r\n        walletAddress,\r\n        deadlineInMilliseconds,\r\n      ],\r\n    };\r\n  };\r\n\r\n  removeLiquidityCallParameters = async (\r\n    params: InputParams.RemoveLiquidity\r\n  ): Promise<SMCParams.CallParams> => {\r\n    const { tokenA: inputToken, tokenB: outputToken } = params.pair;\r\n    // For KAI Pairs\r\n    if (\r\n      this.isKAI(inputToken.tokenAddress) ||\r\n      this.isKAI(outputToken.tokenAddress)\r\n    ) {\r\n      const {\r\n        tokenAddress,\r\n        liquidity,\r\n        amountKAIMin,\r\n        amountTokenMin,\r\n        walletAddress,\r\n        deadlineInMilliseconds,\r\n      } = await this.transformRemoveLiquidityKAIParams(params);\r\n\r\n      return {\r\n        methodName: methodNames.REMOVE_LIQUIDITY_KAI,\r\n        args: [\r\n          tokenAddress,\r\n          liquidity,\r\n          amountTokenMin,\r\n          amountKAIMin,\r\n          walletAddress,\r\n          deadlineInMilliseconds,\r\n        ],\r\n      };\r\n    }\r\n\r\n    const {\r\n      tokenA,\r\n      tokenB,\r\n      liquidity,\r\n      amountAMin,\r\n      amountBMin,\r\n      walletAddress,\r\n      deadlineInMilliseconds,\r\n    } = await this.transformRemoveLiquidityParams(params);\r\n\r\n    return {\r\n      methodName: methodNames.REMOVE_LIQUIDITY,\r\n      args: [\r\n        tokenA,\r\n        tokenB,\r\n        liquidity,\r\n        amountAMin,\r\n        amountBMin,\r\n        walletAddress,\r\n        deadlineInMilliseconds,\r\n      ],\r\n    };\r\n  };\r\n\r\n  calculateOutputAmount = async ({\r\n    amount,\r\n    inputToken,\r\n    outputToken,\r\n    inputType,\r\n  }: InputParams.CalculateOutputAmount): Promise<string> => {\r\n    if (!amount || !inputToken || !outputToken)\r\n      throw new Error('Params input error.');\r\n    const {\r\n      tokenAddress: inputTokenAddr,\r\n      decimals: inputTokenDec,\r\n    } = inputToken;\r\n    const {\r\n      tokenAddress: outputTokenAddr,\r\n      decimals: outputTokenDec,\r\n    } = outputToken;\r\n\r\n    let amountDec;\r\n    const path = Utils.renderPair(inputTokenAddr, outputTokenAddr);\r\n    let amountOutDec = '';\r\n    let decimals;\r\n\r\n    switch (inputType) {\r\n      case InputType.EXACT_IN:\r\n        amountDec = Utils.cellValue(amount, inputTokenDec);\r\n        amountOutDec = await this.router.getAmountsOut(amountDec, path);\r\n        decimals = outputTokenDec;\r\n        break;\r\n      case InputType.EXACT_OUT:\r\n        amountDec = Utils.cellValue(amount, outputTokenDec);\r\n        amountOutDec = await this.router.getAmountsIn(amountDec, path);\r\n        decimals = inputTokenDec;\r\n        break;\r\n    }\r\n    return Utils.convertValueFollowDecimal(amountOutDec, decimals);\r\n  };\r\n\r\n  calculatePriceImpact = async ({\r\n    inputToken,\r\n    outputToken,\r\n    amountIn,\r\n    amountOut,\r\n  }: InputParams.CalculatePriceImpact): Promise<string> => {\r\n    if (!inputToken || !outputToken || !amountIn || !amountOut)\r\n      throw new Error('Params input error.');\r\n    const {\r\n      decimals: inputTokenDec,\r\n      tokenAddress: inputTokenAddr,\r\n    } = inputToken;\r\n    const {\r\n      decimals: outputTokenDec,\r\n      tokenAddress: outputTokenAddr,\r\n    } = outputToken;\r\n\r\n    const { reserveA, reserveB } = await this.router.getReserves(\r\n      inputTokenAddr,\r\n      outputTokenAddr\r\n    );\r\n    if (!reserveA || reserveA === '0' || !reserveB || reserveB === '0')\r\n      return '0';\r\n\r\n    const amountInDec = Utils.cellValue(amountIn, inputTokenDec);\r\n    const amountOutDec = Utils.cellValue(amountOut, outputTokenDec);\r\n\r\n    const reserveAConvertBigInt = inputTokenDec\r\n      ? new Fraction(\r\n          JSBI.BigInt(reserveA),\r\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(inputTokenDec))\r\n        )\r\n      : new Fraction(JSBI.BigInt(reserveA));\r\n    const reserveBConvertBigInt = outputTokenDec\r\n      ? new Fraction(\r\n          JSBI.BigInt(reserveB),\r\n          JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(outputTokenDec))\r\n        )\r\n      : new Fraction(JSBI.BigInt(reserveB));\r\n    const midPrice = reserveBConvertBigInt.divide(reserveAConvertBigInt);\r\n\r\n    const amountInFrac = new Fraction(\r\n      amountInDec,\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(inputTokenDec))\r\n    );\r\n    const amountOutFrac = new Fraction(\r\n      amountOutDec,\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(outputTokenDec))\r\n    );\r\n\r\n    const exactQuote = midPrice.multiply(amountInFrac);\r\n    const slippage = exactQuote.subtract(amountOutFrac).divide(exactQuote);\r\n    return slippage.multiply(100).toFixed(5);\r\n  };\r\n\r\n  calculateExchangeRate = async (\r\n    tokenA: Token,\r\n    tokenB: Token\r\n  ): Promise<{ rateAB: number; rateBA: number }> => {\r\n    const { reserveA, reserveB } = await this.router.getReserves(\r\n      tokenA.tokenAddress,\r\n      tokenB.tokenAddress\r\n    );\r\n    const tokenAValue = Utils.convertValueFollowDecimal(\r\n      JSBI.BigInt(reserveA).toString(),\r\n      tokenA.decimals\r\n    );\r\n    const tokenBValue = Utils.convertValueFollowDecimal(\r\n      JSBI.BigInt(reserveB).toString(),\r\n      tokenB.decimals\r\n    );\r\n    const _tokenAValue = Number(tokenAValue);\r\n    const _tokenBValue = Number(tokenBValue);\r\n    const rateAB = _tokenAValue ? _tokenBValue / _tokenAValue : 0;\r\n    const rateBA = _tokenBValue ? _tokenAValue / _tokenBValue : 0;\r\n    return { rateAB, rateBA };\r\n  };\r\n\r\n  public marketSwapCallParameters = ({\r\n    amountIn,\r\n    amountOut,\r\n    inputToken,\r\n    outputToken,\r\n    addressTo,\r\n    inputType,\r\n    txDeadline,\r\n    slippageTolerance,\r\n  }: InputParams.MarketSwap): SMCParams.CallParams => {\r\n    if (!amountIn || !amountOut || !addressTo || !inputToken || !outputToken)\r\n      throw new Error('Params input error.');\r\n    const kaiIn = this.isKAI(inputToken.tokenAddress);\r\n    const kaiOut = this.isKAI(outputToken.tokenAddress);\r\n    const amountInDec = Utils.cellValue(amountIn, inputToken.decimals);\r\n    const amountOutDec = Utils.cellValue(amountOut, outputToken.decimals);\r\n    const amountOutMinDec = Utils.calculateSlippageValue(\r\n      amountOutDec,\r\n      slippageTolerance,\r\n      'sub'\r\n    );\r\n    const amountInMaxDec = Utils.calculateSlippageValue(\r\n      amountInDec,\r\n      slippageTolerance,\r\n      'add'\r\n    );\r\n    const path = Utils.renderPair(\r\n      inputToken.tokenAddress,\r\n      outputToken.tokenAddress\r\n    );\r\n\r\n    let swapParams: SMCParams.CallParams = {} as SMCParams.CallParams;\r\n    switch (inputType) {\r\n      case InputType.EXACT_IN:\r\n        if (kaiIn) {\r\n          swapParams = {\r\n            methodName: methodNames.SWAP_EXACT_KAI_FOR_TOKENS,\r\n            args: [amountOutMinDec, path, addressTo, txDeadline],\r\n            amount: amountInDec,\r\n          } as SMCParams.CallParams;\r\n        } else if (kaiOut) {\r\n          swapParams = {\r\n            methodName: methodNames.SWAP_EXACT_TOKENS_FOR_KAI,\r\n            args: [amountInDec, amountOutMinDec, path, addressTo, txDeadline],\r\n          };\r\n        } else {\r\n          swapParams = {\r\n            methodName: methodNames.SWAP_EXACT_TOKENS_FOR_TOKENS,\r\n            args: [amountInDec, amountOutMinDec, path, addressTo, txDeadline],\r\n          };\r\n        }\r\n        break;\r\n      case InputType.EXACT_OUT:\r\n        if (kaiIn) {\r\n          swapParams = {\r\n            methodName: methodNames.SWAP_KAI_FOR_EXACT_TOKENS,\r\n            args: [amountOutDec, path, addressTo, txDeadline],\r\n            amount: amountInMaxDec,\r\n          };\r\n        } else if (kaiOut) {\r\n          swapParams = {\r\n            methodName: methodNames.SWAP_TOKENS_FOR_EXACT_KAI,\r\n            args: [amountOutDec, amountInMaxDec, path, addressTo, txDeadline],\r\n          };\r\n        } else {\r\n          swapParams = {\r\n            methodName: methodNames.SWAP_TOKENS_FOR_EXACT_TOKENS,\r\n            args: [amountOutDec, amountInMaxDec, path, addressTo, txDeadline],\r\n          };\r\n        }\r\n        break;\r\n    }\r\n    return swapParams;\r\n  };\r\n\r\n  public limitOrderCallParameters = ({\r\n    amountIn,\r\n    amountOut,\r\n    inputToken,\r\n    outputToken,\r\n    inputType,\r\n    tradeType,\r\n  }: InputParams.LimitOrder): SMCParams.CallParams => {\r\n    if (!amountIn || !amountOut || !inputToken || !outputToken)\r\n      throw new Error('Params input error.');\r\n    const {\r\n      tokenAddress: inputTokenAddr,\r\n      decimals: inputTokenDec,\r\n    } = inputToken;\r\n    const {\r\n      tokenAddress: outputTokenAddr,\r\n      decimals: outputTokenDec,\r\n    } = outputToken;\r\n    const amountInDec = Utils.cellValue(amountIn, inputTokenDec);\r\n    const amountOutDec = Utils.cellValue(amountOut, outputTokenDec);\r\n    const kaiIn = this.isKAI(inputToken.tokenAddress);\r\n    let swapParams: SMCParams.CallParams;\r\n    if (kaiIn) {\r\n      swapParams = {\r\n        methodName: methodNames.ORDER_INPUT_KAI,\r\n        args: [outputTokenAddr, amountOutDec, inputType, tradeType],\r\n        amount: amountInDec,\r\n      };\r\n    } else {\r\n      swapParams = {\r\n        methodName: methodNames.ORDER_INPUT_TOKENS,\r\n        args: [\r\n          inputTokenAddr,\r\n          amountInDec,\r\n          outputTokenAddr,\r\n          amountOutDec,\r\n          inputType,\r\n          tradeType,\r\n        ],\r\n      };\r\n    }\r\n    return swapParams;\r\n  };\r\n\r\n  cancelLimitOrder = ({\r\n    pairAddr,\r\n    orderID,\r\n  }: InputParams.CancelOrder): SMCParams.CallParams => {\r\n    if (!pairAddr || !orderID) throw new Error('Params input error.');\r\n    return {\r\n      methodName: methodNames.CANCEL_ORDER,\r\n      args: [pairAddr, orderID],\r\n    } as SMCParams.CallParams;\r\n  };\r\n}\r\n"],"names":["undefined","methodNames","GET_PAIR","GET_RESERVES","GET_AMOUNTS_OUT","GET_AMOUNTS_IN","GET_TOTAL_KAI_AMOUNTS_IN","ADD_LIQUIDITY","ADD_LIQUIDITY_KAI","REMOVE_LIQUIDITY","REMOVE_LIQUIDITY_KAI","SWAP_EXACT_TOKENS_FOR_TOKENS","SWAP_TOKENS_FOR_EXACT_TOKENS","SWAP_EXACT_KAI_FOR_TOKENS","SWAP_EXACT_TOKENS_FOR_KAI","SWAP_TOKENS_FOR_EXACT_KAI","SWAP_KAI_FOR_EXACT_TOKENS","APPROVE","ALLOWANCE","BALANCE_OF","TOTAL_SUPPLY","ORDER_INPUT_KAI","ORDER_INPUT_TOKENS","CANCEL_ORDER","abiJson","ROUTER","FACTORY","KRC20","LIMIT_ORDER","smcAddresses","WKAI","endpoint","AbstractSmcService","abi","smcAddress","client","contractAddr","methodName","params","kardiaContract","updateAbi","invokeContract","invoke","call","kardiaClient","kardiaAccount","account","contract","kardiaTransaction","transaction","kardiaChain","kaiChain","kardiaKrc20","krc20","Rounding","ONE","JSBI","BigInt","Decimal","toFormat","_Decimal","Big","_Big","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","parseBigintIsh","bigintIsh","Number","Fraction","numerator","denominator","invert","add","other","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","validatePath","path","length","KardiaAccount","isAddress","Error","RouterService","tokenA","tokenB","smcCallData","amountIn","result","amountOut","FactoryService","trim","KRC20Service","tokenAddress","walletAddress","spenderAddress","amount","getTotalSupply","TEN","ONE_FRACTION","cellValue","kaiValue","decimals","rawValue","BigNumber","multipliedBy","convertValueFollowDecimal","value","valueFrac","DecimalsbigNum","parseB","exponentiate","removeTrailingZeros","error","console","regEx1","regEx2","regEx3","valueInString","after","replace","indexOf","calculateSlippageValue","slippageTolerance","type","_value","slippageFrac","slippagePercent","calculateLiquidityProvidersFee","amountFrac","renderPair","tokenIn","tokenOut","Utils","KaidexService","options","abis","rpcEndpoint","wkai","toLowerCase","txDeadline","inputAmount","outputAmount","amountADesiredInDec","amountBDesiredInDec","calculatedAmountAMinInDec","calculatedAmountBMinInDec","amountADesired","amountBDesired","amountAMin","amountBMin","deadlineInMilliseconds","transformAddLiquidityParams","otherTokenAddress","isKAI","otherTokenDesiredAmount","otherTokenMinAmount","amountKAI","amountKAIMin","amountTokenMin","amountTokenDesired","pair","withdrawAmount","pairAddress","balanceOf","balance","totalSupply","withdrawPercent","tokenABalance","_amountAMin","tokenBBalance","_amountBMin","liquidity","transformRemoveLiquidityParams","otherToken","smcAddr","gasLimit","gasPrice","JSON","parse","stringify","txData","data","sendTransactionToExtension","gas","to","abiJSON","router","factory","limitOrder","defaultAddresses","KardiaClient","defaultEndpoint","TradeType","InputType","KaidexClient","getPair","getReserves","tokenAddr","amountToCheck","getAllowance","currentAllowance","inputToken","outputToken","transformAddLiquidityKAIParams","args","transformRemoveLiquidityKAIParams","inputType","inputTokenAddr","inputTokenDec","outputTokenAddr","outputTokenDec","amountOutDec","EXACT_IN","EXACT_OUT","amountDec","getAmountsOut","getAmountsIn","reserveA","reserveB","amountInDec","reserveAConvertBigInt","reserveBConvertBigInt","midPrice","amountInFrac","amountOutFrac","exactQuote","slippage","tokenAValue","tokenBValue","_tokenAValue","_tokenBValue","rateAB","rateBA","addressTo","kaiIn","kaiOut","amountOutMinDec","amountInMaxDec","swapParams","tradeType","pairAddr","orderID"],"mappings":"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"}